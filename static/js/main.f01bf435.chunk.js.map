{"version":3,"sources":["oauth-1.0a.js","aws/aws-exports.js","data/Job_list.csv","constants.js","redux/actionTypes.js","redux/actions.js","components/MapBox/images/pin.png","components/MapBox/MapBox.js","pages/GeocodePage/index.js","routing.js","components/Modal/Modal.js","ui-elements/DropdownMenu/index.js","components/CSVDetailsForms/images/trash.svg","components/CSVDetailsForms/JobDetailsForm.js","components/CSVDetailsForms/LocationDetailsForm.js","components/CSVDetailsForms/index.js","components/DataGrid/index.js","pages/ImportPage/index.js","pages/MapPage/index.js","aws/index.js","components/UploadFileArea/index.js","pages/UploadPage/index.js","flexible-polyline.js","redux/fetchers.js","App.js","history.js","redux/reducers/formData.js","redux/reducers/jobList.js","redux/reducers/mapbox.js","redux/reducers/routingProblem.js","redux/reducers/serviceProfiles.js","redux/reducers/window.js","redux/reducers/index.js","redux/store.js","reportWebVitals.js","index.js"],"names":["OAuth","opts","this","consumer","Error","nonce_length","version","parameter_seperator","realm","last_ampersand","signature_method","hash_function","base_string","key","body_hash_function","module","exports","prototype","authorize","request","token","oauth_data","oauth_consumer_key","oauth_nonce","getNonce","oauth_signature_method","oauth_timestamp","getTimeStamp","oauth_version","undefined","oauth_token","data","includeBodyHash","oauth_body_hash","getBodyHash","secret","oauth_signature","getSignature","token_secret","getBaseString","getSigningKey","body","JSON","stringify","method","toUpperCase","percentEncode","getBaseUrl","url","getParameterString","base_string_data","sortObject","percentEncodeData","mergeObject","deParamUrl","data_str","i","length","value","Array","isArray","sort","valString","forEach","item","bind","substr","split","deParam","string","arr","push","decodeURIComponent","tmp","str","encodeURIComponent","replace","result","newValue","val","toHeader","sorted","header_value","indexOf","Authorization","word_characters","parseInt","Math","random","Date","getTime","obj1","obj2","merged_obj","keys","Object","awsmobile","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","MAPBOX","latitude","longitude","zoom","mapStyle","AWS","JOB_LIST_INDEX_KEY","GRID_ID","LOCATION_FIELDS","id","required","name","descr","type","address","address1","address2","city","state","zip","FIELDS_TYPES","text","validationRules","regex","email","phone","date","time","number","sortComparer","reference","comparer","decimal","JOB_FIELDS","duration","sheduleDate","startTime","endTime","MAPBOX_READY","RESIZE_WINDOW","MAPBOX_VIEWPORT_CHANGE","GET_JOBS_LIST","SET_FORM_DATA","GET_ROUTING_PROBLEM","GET_TOUR","SET_ERROR_MESSAGE","START_FETCH_ROUTING_PROBLEM","END_FETCH_ROUTING_PROBLEM","SET_CURRENT_TOUR","MOVE_TO_POINT","SHOW_ROUTING_PROBLEM_RESULT","SET_JOB_LIST_VALUE","SHOW_JOBS_EDITOR_MODAL","SHOW_PROFILE_FORM_MODAL","ADD_SERVICE_PROFILE","EDIT_SERVICE_PROFILE","SET_EDIT_SERVICE_PROFILE","DELETE_SERVICE_PROFILE","SET_JOB_FIELD","SET_LOCATION_FIELD","REMOVE_JOB_FIELD","ADD_JOB_LIST_VALUE","REMOVE_JOB_LIST_VALUE","SET_IS_BATCH_EDITING","SET_IS_DROPDOWN_TOGGLED","GET_DB_DATA","getJobsList","jobList","payload","setFormData","params","setJobField","field","setIsBatchEditing","status","setIsDropdownToggled","connect","viewportState","mapbox","viewport","list","routingProblem","results","tours","isMapboxReady","currentTourId","flyToPoint","serviceProfiles","profiles","mapboxViewportChange","mapboxReady","mapboxApiAccessToken","useState","showPopup","setShowPopup","popupData","setPopupData","routesGeojson","setRoutesGeojson","jobListGeojson","setJobListGeojson","serviceProfilesGeojson","setServiceProfilesGeojson","currentRouteGeojson","setCurrentRouteGeojson","refMap","useRef","useEffect","filteredTour","_","filter","features","feature","properties","vehicleId","turf","doFlyTo","lng","lat","newJobListGeojson","objToGeoJSON","active","current","getMap","getSource","setData","toursCollection","map","tour","lineColor","getRandomColor","sections","section","sectionFeature","polyline","departureTime","departure","arrivalTime","arrival","color","geojson","bboxArray","bbox","flyToProps","cameraForBounds","padding","top","bottom","left","right","updateViewport","transitionDuration","transitionInterpolator","FlyToInterpolator","center","toString","obj","ref","width","height","onClick","event","targetFeture","console","log","layer","onViewportChange","onLoad","paint","layout","closeButton","closeOnClick","onClose","anchor","String","GeocodePage","jobsList","useSelector","db","Container","Row","Col","Spinner","animation","Table","striped","bordered","hover","className","coordinates","JobID","StreetAddress","City","Zip","size","routePath","upload","import","geocode","ModalComponent","isOpen","onHide","titleText","dialogClassName","children","show","setShow","Modal","aria-labelledby","centered","backdrop","keyboard","Header","Title","Body","DropdownMenu","selectedItem","selectedItems","noneItemText","items","style","disabled","onToggle","_onClick","target","dataset","DropdownButton","metadata","variant","title","Dropdown","Item","find","item_selected","data-value","data-active","JobDetailsForm","onSubmit","onCancel","jobFields","locationFields","dispatch","useDispatch","jobListKeys","setJobListKeys","customFieldInput","setCustomFieldInput","selectedJobListKeys","setSelectedJobListKeys","locationFieldsKeys","jobFieldsKeys","mergedFields","fieldKey","noGutters","margin","sm","textAlign","custom","src","trashSVG","newItem","Form","Control","placeholder","onChange","e","Button","block","LocationDetailsForm","setLocationField","CSVDetailsForms","history","useHistory","currentStep","setCurrentStep","isModalSaveDataOpen","setIsModalSaveDataOpen","isModalCancelOpen","setIsModalCancelOpen","isBatchEditing","isDropdownToggled","setIsModalOpen","_onCancel","overflowY","current_currentStep","DataGrid","_gridRef","isGridReady","setIsGridReady","fieldsParams","values","isFieldValid","column","isValid","currentField","fieldParams","isRequiredValid","test","getColumnValidationRules","getColumnSortComparer","referenceRow","comparerRow","currentCol","getColumnByField","sortResult","sortDirection","getFieldParamsByKey","localStorage","parse","window","getItem","setItem","clearColumnStorage","columns","componentRefresh","refreshHeader","clearFiltering","clearSorting","autoFitColumns","setTimeout","dataSource","refresh","_footerTemplate","Custom","getErrorsFromColumn","errorList","props","job","created","actionBegin","requestType","currentPage","page","pageSettings","setCurrentPageStorage","batchAdd","batchDelete","batchCancel","beforeBatchSave","batchChanges","addedRecords","addJobJistValue","changedRecords","index","setJobJistValue","deletedRecords","dataBound","enableToolbarItems","filterModule","actualPredicate","cellSave","previousValue","pageSize","pageSizes","enablePersistence","allowFiltering","allowSorting","allowPaging","filterSettings","toolbar","tooltipText","prefixIcon","toolbarClick","editSettings","allowEditing","allowAdding","allowDeleting","mode","columnMenuItems","columnMenuOpen","errorsCount","hide","columnMenuClick","filterByColumn","allowResizing","allowTextWrap","showColumnMenu","queryCellInfo","cell","classList","add","services","Filter","Sort","Page","Edit","Toolbar","Resize","ColumnMenu","Aggregate","jobListKey","lockColumn","visible","footerTemplate","customAggregate","ImportPage","md","lg","MapPage","xs","config","region","constAWS","credentials","CognitoIdentityCredentials","IdentityPoolId","apiVersions","dynamodbstreams","s3","S3Bucket","S3","Bucket","dynamoDBClient","DynamoDBStreams","DynamoDB","DocumentClient","UploadFileArea","onDropAccepted","refDropzone","errorMessages","setErrorMessages","uploadedFile","setUploadedFile","accept","maxFiles","multiple","files","$","removeClass","addClass","onDropRejected","errors","message","Alert","onDragLeave","onDragEnter","getRootProps","getInputProps","UploadPage","file","removeItem","Promise","resolve","reject","fileName","now","Key","ACL","err","s3Upload","then","file_data","counter","interval","setInterval","file_name","TableName","KeyConditionExpression","ExpressionAttributeNames","ExpressionAttributeValues","query","listDynamoDB","getDBData","Items","geocodedCount","clearInterval","separator","CSV","parsedCSV","jqueryCSV","toObjects","row","join","error","BigInt","require","App","changeWindowSizeState","changeWindowSize","on","fetchJobsListCSV","csvFile","Amplify","configure","awsconfig","Cookies","get","oauth","CryptoJS","HmacSHA256","enc","Base64","request_data","grant_type","ajax","headers","done","set","access_token","expires","fluid","exact","path","component","to","React","Component","errorMessage","isRoutingProblemResultShown","isJobsEditorModalShown","isProfileFormModalShown","editServiceProfile","timezone","formData","fetch","response","csv","createBrowserHistory","initialState","startDate","isLoading","skills","timeWindow","vehicleCount","vehicleType","mustGoBack","fixedCost","distanceCost","timeCost","capacity","combineReducers","action","tourId","coords","json","profile","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.f01bf435.chunk.js","sourcesContent":["/* eslint-disable */\nif (typeof module !== \"undefined\" && typeof exports !== \"undefined\") {\n  module.exports = OAuth;\n}\n\n/**\n * Constructor\n * @param {Object} opts consumer key and secret\n */\nfunction OAuth(opts) {\n  if (!(this instanceof OAuth)) {\n    return new OAuth(opts);\n  }\n\n  if (!opts) {\n    opts = {};\n  }\n\n  if (!opts.consumer) {\n    throw new Error(\"consumer option is required\");\n  }\n\n  this.consumer = opts.consumer;\n  this.nonce_length = opts.nonce_length || 32;\n  this.version = opts.version || \"1.0\";\n  this.parameter_seperator = opts.parameter_seperator || \", \";\n  this.realm = opts.realm;\n\n  if (typeof opts.last_ampersand === \"undefined\") {\n    this.last_ampersand = true;\n  } else {\n    this.last_ampersand = opts.last_ampersand;\n  }\n\n  // default signature_method is 'PLAINTEXT'\n  this.signature_method = opts.signature_method || \"PLAINTEXT\";\n\n  if (this.signature_method == \"PLAINTEXT\" && !opts.hash_function) {\n    opts.hash_function = function (base_string, key) {\n      return key;\n    };\n  }\n\n  if (!opts.hash_function) {\n    throw new Error(\"hash_function option is required\");\n  }\n\n  this.hash_function = opts.hash_function;\n  this.body_hash_function = opts.body_hash_function || this.hash_function;\n}\n\n/**\n * OAuth request authorize\n * @param  {Object} request data\n * {\n *     method,\n *     url,\n *     data\n * }\n * @param  {Object} key and secret token\n * @return {Object} OAuth Authorized data\n */\nOAuth.prototype.authorize = function (request, token) {\n  var oauth_data = {\n    oauth_consumer_key: this.consumer.key,\n    oauth_nonce: this.getNonce(),\n    oauth_signature_method: this.signature_method,\n    oauth_timestamp: this.getTimeStamp(),\n    oauth_version: this.version,\n  };\n\n  if (!token) {\n    token = {};\n  }\n\n  if (token.key !== undefined) {\n    oauth_data.oauth_token = token.key;\n  }\n\n  if (!request.data) {\n    request.data = {};\n  }\n\n  if (request.includeBodyHash) {\n    oauth_data.oauth_body_hash = this.getBodyHash(request, token.secret);\n  }\n\n  oauth_data.oauth_signature = this.getSignature(\n    request,\n    token.secret,\n    oauth_data\n  );\n\n  return oauth_data;\n};\n\n/**\n * Create a OAuth Signature\n * @param  {Object} request data\n * @param  {Object} token_secret key and secret token\n * @param  {Object} oauth_data   OAuth data\n * @return {String} Signature\n */\nOAuth.prototype.getSignature = function (request, token_secret, oauth_data) {\n  return this.hash_function(\n    this.getBaseString(request, oauth_data),\n    this.getSigningKey(token_secret)\n  );\n};\n\n/**\n * Create a OAuth Body Hash\n * @param {Object} request data\n */\nOAuth.prototype.getBodyHash = function (request, token_secret) {\n  var body =\n    typeof request.data === \"string\"\n      ? request.data\n      : JSON.stringify(request.data);\n\n  if (!this.body_hash_function) {\n    throw new Error(\"body_hash_function option is required\");\n  }\n\n  return this.body_hash_function(body, this.getSigningKey(token_secret));\n};\n\n/**\n * Base String = Method + Base Url + ParameterString\n * @param  {Object} request data\n * @param  {Object} OAuth data\n * @return {String} Base String\n */\nOAuth.prototype.getBaseString = function (request, oauth_data) {\n  return (\n    request.method.toUpperCase() +\n    \"&\" +\n    this.percentEncode(this.getBaseUrl(request.url)) +\n    \"&\" +\n    this.percentEncode(this.getParameterString(request, oauth_data))\n  );\n};\n\n/**\n * Get data from url\n * -> merge with oauth data\n * -> percent encode key & value\n * -> sort\n *\n * @param  {Object} request data\n * @param  {Object} OAuth data\n * @return {Object} Parameter string data\n */\nOAuth.prototype.getParameterString = function (request, oauth_data) {\n  var base_string_data;\n  if (oauth_data.oauth_body_hash) {\n    base_string_data = this.sortObject(\n      this.percentEncodeData(\n        this.mergeObject(oauth_data, this.deParamUrl(request.url))\n      )\n    );\n  } else {\n    base_string_data = this.sortObject(\n      this.percentEncodeData(\n        this.mergeObject(\n          oauth_data,\n          this.mergeObject(request.data, this.deParamUrl(request.url))\n        )\n      )\n    );\n  }\n\n  var data_str = \"\";\n\n  //base_string_data to string\n  for (var i = 0; i < base_string_data.length; i++) {\n    var key = base_string_data[i].key;\n    var value = base_string_data[i].value;\n    // check if the value is an array\n    // this means that this key has multiple values\n    if (value && Array.isArray(value)) {\n      // sort the array first\n      value.sort();\n\n      var valString = \"\";\n      // serialize all values for this key: e.g. formkey=formvalue1&formkey=formvalue2\n      value.forEach(\n        function (item, i) {\n          valString += key + \"=\" + item;\n          if (i < value.length) {\n            valString += \"&\";\n          }\n        }.bind(this)\n      );\n      data_str += valString;\n    } else {\n      data_str += key + \"=\" + value + \"&\";\n    }\n  }\n\n  //remove the last character\n  data_str = data_str.substr(0, data_str.length - 1);\n  return data_str;\n};\n\n/**\n * Create a Signing Key\n * @param  {String} token_secret Secret Token\n * @return {String} Signing Key\n */\nOAuth.prototype.getSigningKey = function (token_secret) {\n  token_secret = token_secret || \"\";\n\n  if (!this.last_ampersand && !token_secret) {\n    return this.percentEncode(this.consumer.secret);\n  }\n\n  return (\n    this.percentEncode(this.consumer.secret) +\n    \"&\" +\n    this.percentEncode(token_secret)\n  );\n};\n\n/**\n * Get base url\n * @param  {String} url\n * @return {String}\n */\nOAuth.prototype.getBaseUrl = function (url) {\n  return url.split(\"?\")[0];\n};\n\n/**\n * Get data from String\n * @param  {String} string\n * @return {Object}\n */\nOAuth.prototype.deParam = function (string) {\n  var arr = string.split(\"&\");\n  var data = {};\n\n  for (var i = 0; i < arr.length; i++) {\n    var item = arr[i].split(\"=\");\n\n    // '' value\n    item[1] = item[1] || \"\";\n\n    // check if the key already exists\n    // this can occur if the QS part of the url contains duplicate keys like this: ?formkey=formvalue1&formkey=formvalue2\n    if (data[item[0]]) {\n      // the key exists already\n      if (!Array.isArray(data[item[0]])) {\n        // replace the value with an array containing the already present value\n        data[item[0]] = [data[item[0]]];\n      }\n      // and add the new found value to it\n      data[item[0]].push(decodeURIComponent(item[1]));\n    } else {\n      // it doesn't exist, just put the found value in the data object\n      data[item[0]] = decodeURIComponent(item[1]);\n    }\n  }\n\n  return data;\n};\n\n/**\n * Get data from url\n * @param  {String} url\n * @return {Object}\n */\nOAuth.prototype.deParamUrl = function (url) {\n  var tmp = url.split(\"?\");\n\n  if (tmp.length === 1) return {};\n\n  return this.deParam(tmp[1]);\n};\n\n/**\n * Percent Encode\n * @param  {String} str\n * @return {String} percent encoded string\n */\nOAuth.prototype.percentEncode = function (str) {\n  return encodeURIComponent(str)\n    .replace(/\\!/g, \"%21\")\n    .replace(/\\*/g, \"%2A\")\n    .replace(/\\'/g, \"%27\")\n    .replace(/\\(/g, \"%28\")\n    .replace(/\\)/g, \"%29\");\n};\n\n/**\n * Percent Encode Object\n * @param  {Object} data\n * @return {Object} percent encoded data\n */\nOAuth.prototype.percentEncodeData = function (data) {\n  var result = {};\n\n  for (var key in data) {\n    var value = data[key];\n    // check if the value is an array\n    if (value && Array.isArray(value)) {\n      var newValue = [];\n      // percentEncode every value\n      value.forEach(\n        function (val) {\n          newValue.push(this.percentEncode(val));\n        }.bind(this)\n      );\n      value = newValue;\n    } else {\n      value = this.percentEncode(value);\n    }\n    result[this.percentEncode(key)] = value;\n  }\n\n  return result;\n};\n\n/**\n * Get OAuth data as Header\n * @param  {Object} oauth_data\n * @return {String} Header data key - value\n */\nOAuth.prototype.toHeader = function (oauth_data) {\n  var sorted = this.sortObject(oauth_data);\n\n  var header_value = \"OAuth \";\n\n  if (this.realm) {\n    header_value += 'realm=\"' + this.realm + '\"' + this.parameter_seperator;\n  }\n\n  for (var i = 0; i < sorted.length; i++) {\n    if (sorted[i].key.indexOf(\"oauth_\") !== 0) continue;\n\n    header_value +=\n      this.percentEncode(sorted[i].key) +\n      \"=\\\"\" +\n      this.percentEncode(sorted[i].value) +\n      \"\\\"\" +\n      this.parameter_seperator;\n  }\n\n  return {\n    Authorization: header_value.substr(\n      0,\n      header_value.length - this.parameter_seperator.length\n    ), //cut the last chars\n  };\n};\n\n/**\n * Create a random word characters string with input length\n * @return {String} a random word characters string\n */\nOAuth.prototype.getNonce = function () {\n  var word_characters =\n    \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  var result = \"\";\n\n  for (var i = 0; i < this.nonce_length; i++) {\n    result +=\n      word_characters[parseInt(Math.random() * word_characters.length, 10)];\n  }\n\n  return result;\n};\n\n/**\n * Get Current Unix TimeStamp\n * @return {Int} current unix timestamp\n */\nOAuth.prototype.getTimeStamp = function () {\n  return parseInt(new Date().getTime() / 1000, 10);\n};\n\n////////////////////// HELPER FUNCTIONS //////////////////////\n\n/**\n * Merge object\n * @param  {Object} obj1\n * @param  {Object} obj2\n * @return {Object}\n */\nOAuth.prototype.mergeObject = function (obj1, obj2) {\n  obj1 = obj1 || {};\n  obj2 = obj2 || {};\n\n  var merged_obj = obj1;\n  for (var key in obj2) {\n    merged_obj[key] = obj2[key];\n  }\n  return merged_obj;\n};\n\n/**\n * Sort object by key\n * @param  {Object} data\n * @return {Array} sorted array\n */\nOAuth.prototype.sortObject = function (data) {\n  var keys = Object.keys(data);\n  var result = [];\n\n  keys.sort();\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    result.push({\n      key: key,\n      value: data[key],\n    });\n  }\n\n  return result;\n};\n","/* eslint-disable max-len */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n  aws_appsync_graphqlEndpoint:\n    \"https://fhu6vq2pfzemhn6a5rn2hlpsca.appsync-api.us-east-2.amazonaws.com/graphql\",\n  aws_appsync_region: \"us-east-2\",\n  aws_appsync_authenticationType: \"API_KEY\",\n  aws_appsync_apiKey: \"da2-bka6win4xnbfdldncd4keslp3i\",\n};\n\nexport default awsmobile;\n","export default __webpack_public_path__ + \"static/media/Job_list.78e44d1d.csv\";","export const MAPBOX = {\n  API_TOKEN:\n    \"pk.eyJ1IjoiZG9uaW5wciIsImEiOiJjaXVxM3E4OTkwMDAwMm9wczBnYjR4bnJoIn0.7drt92qBRl7KJ6dLg0mrww\",\n  VIEWPORT: {\n    latitude: 38.483,\n    longitude: -98.57,\n    zoom: 2,\n    mapStyle: \"mapbox://styles/doninpr/ckhmbeaw00yii19mxt3o8vm3x\",\n  },\n};\n\nexport const AWS = {\n  region: \"us-east-2\",\n  IdentityPoolId: \"us-east-2:0fb59e2d-cbdf-4dbd-a2f8-0d8c4bc1136d\",\n  bucketName: \"deliveryapp-uploadedfiles\",\n};\n\nexport const JOB_LIST_INDEX_KEY = \"indexKey\";\n\nexport const GRID_ID = \"JobsGrid\";\n\nexport const VEHICLES = {\n  options: [\n    {\n      id: 0,\n      type: \"car\",\n      name: \"Car\",\n      options: {\n        height: undefined,\n        width: undefined,\n        length: undefined,\n        tunnelCategory: undefined,\n        weightPerAxle: undefined,\n        grossWeight: undefined,\n        shippedHazardousGoods: undefined,\n      },\n    },\n    {\n      id: 1,\n      type: \"car\",\n      name: \"Pickup truck\",\n      options: {\n        height: undefined,\n        width: undefined,\n        length: undefined,\n        tunnelCategory: undefined,\n        weightPerAxle: undefined,\n        grossWeight: undefined,\n        shippedHazardousGoods: undefined,\n      },\n    },\n    {\n      id: 2,\n      type: \"truck\",\n      name: \"Cargo Van\",\n      options: {\n        height: undefined,\n        width: undefined,\n        length: undefined,\n        tunnelCategory: undefined,\n        weightPerAxle: undefined,\n        grossWeight: undefined,\n        shippedHazardousGoods: undefined,\n      },\n    },\n    {\n      id: 3,\n      type: \"truck\",\n      name: \"Delivery Truck\",\n      options: {\n        height: undefined,\n        width: undefined,\n        length: undefined,\n        tunnelCategory: undefined,\n        weightPerAxle: undefined,\n        grossWeight: undefined,\n        shippedHazardousGoods: undefined,\n      },\n    },\n    {\n      id: 4,\n      type: \"truck\",\n      name: \"Lift Gate\",\n      options: {\n        height: undefined,\n        width: undefined,\n        length: undefined,\n        tunnelCategory: undefined,\n        weightPerAxle: undefined,\n        grossWeight: undefined,\n        shippedHazardousGoods: undefined,\n      },\n    },\n  ],\n};\n\nexport const LOCATION_FIELDS = {\n  id: {\n    id: \"id\",\n    required: false,\n    name: \"Location ID\",\n    descr: \"\",\n    type: \"text\",\n  },\n  name: {\n    id: \"name\",\n    required: false,\n    name: \"Location Name\",\n    descr: \"\",\n    type: \"text\",\n  },\n  address: {\n    id: \"address\",\n    required: false,\n    name: \"Full address\",\n    descr: \"\",\n    type: \"text\",\n  },\n  address1: {\n    id: \"address1\",\n    required: false,\n    name: \"Address 1\",\n    descr: \"\",\n    type: \"text\",\n  },\n  address2: {\n    id: \"address2\",\n    required: false,\n    name: \"Address 2\",\n    descr: \"\",\n    type: \"text\",\n  },\n  city: {\n    id: \"city\",\n    required: false,\n    name: \"City\",\n    descr: \"\",\n    type: \"text\",\n  },\n  state: {\n    id: \"state\",\n    required: false,\n    name: \"Province / State\",\n    descr: \"\",\n    type: \"text\",\n  },\n  zip: {\n    id: \"zip\",\n    required: false,\n    name: \"Zip or Postal\",\n    descr: \"\",\n    type: \"number\",\n  },\n};\n\nexport const FIELDS_TYPES = {\n  text: {\n    id: \"text\",\n    type: \"text\",\n    validationRules: { regex: [/^.*$/, \"Value should be a text\"] },\n  },\n  email: {\n    id: \"email\",\n    type: \"email\",\n    validationRules: {\n      regex: [\n        /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,8}|[0-9]{1,3})(\\]?)$/,\n        \"Please enter a correct email\",\n      ],\n    },\n  },\n  url: {\n    id: \"url\",\n    type: \"url\",\n    validationRules: {\n      regex: [\n        /^(http|https|ftp)\\:\\/\\/[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{1,3}(:[a-zA-Z0-9]*)?\\/?([a-zA-Z0-9\\-\\._\\?\\,\\'\\/\\\\\\+&amp;%\\$#\\=~])*[^\\.\\,\\)\\(\\s]$/,\n        \"Please enter a correct URL\",\n      ],\n    },\n  },\n  phone: {\n    id: \"phone\",\n    type: \"phone\",\n    validationRules: {\n      regex: [\n        /^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]*$/,\n        \"Please enter a correct Phone Number\",\n      ],\n    },\n  },\n  date: {\n    id: \"date\",\n    type: \"date\",\n    validationRules: {\n      date: true,\n      regex: [\n        /^\\d{2}\\/\\d{2}\\/\\d{4}$/,\n        \"Please enter a correct data (dd/mm/yyyy)\",\n      ],\n    },\n  },\n  time: {\n    id: \"time\",\n    type: \"time\",\n    validationRules: {\n      regex: [\n        /^\\d\\d\\:\\d\\d\\s(A|P|a|p)(M|m)$/,\n        \"Please enter a correct time (00:00 am)\",\n      ],\n    },\n  },\n  number: {\n    id: \"number\",\n    type: \"number\",\n    validationRules: {\n      number: true,\n      regex: [/^\\d*$/, \"Value should be a valid number\"],\n    },\n    sortComparer: (reference, comparer) => {\n      if (+reference < +comparer) {\n        return -1;\n      }\n      if (+reference > +comparer) {\n        return 1;\n      }\n      return 0;\n    },\n  },\n  decimal: {\n    id: \"decimal\",\n    type: \"decimal\",\n    validationRules: {\n      number: true,\n      regex: [/^\\d*(\\.\\d+)?$/, \"Value should be a valid decimal number\"],\n    },\n    sortComparer: (reference, comparer) => {\n      if (+reference < +comparer) {\n        return -1;\n      }\n      if (+reference > +comparer) {\n        return 1;\n      }\n      return 0;\n    },\n  },\n};\n\nexport const JOB_FIELDS = {\n  id: {\n    id: \"id\",\n    required: true,\n    name: \"Job ID\",\n    descr: \"\",\n    type: \"text\",\n  },\n  type: {\n    id: \"type\",\n    required: false,\n    name: \"Type\",\n    descr: \"\",\n    type: \"text\",\n  },\n  duration: {\n    id: \"duration\",\n    required: false,\n    name: \"Duration\",\n    descr: \"\",\n    type: \"number\",\n  },\n  sheduleDate: {\n    id: \"sheduleDate\",\n    required: false,\n    name: \"Shedule Date\",\n    descr: \"\",\n    type: \"date\",\n  },\n  startTime: {\n    id: \"startTime\",\n    required: false,\n    name: \"Start time window\",\n    descr: \"\",\n    type: \"time\",\n  },\n  endTime: {\n    id: \"endTime\",\n    required: false,\n    name: \"End time window\",\n    descr: \"\",\n    type: \"time\",\n  },\n};\n","export const MAPBOX_READY = \"MAPBOX_READY\";\nexport const RESIZE_WINDOW = \"RESIZE_WINDOW\";\nexport const MAPBOX_VIEWPORT_CHANGE = \"MAPBOX_VIEWPORT_CHANGE\";\nexport const GET_JOBS_LIST = \"GET_JOBS_LIST\";\nexport const SET_FORM_DATA = \"SET_FORM_DATA\";\nexport const GET_ROUTING_PROBLEM = \"GET_ROUTING_PROBLEM\";\nexport const GET_TOUR = \"GET_TOUR\";\nexport const SET_ERROR_MESSAGE = \"SET_ERROR_MESSAGE\";\nexport const START_FETCH_ROUTING_PROBLEM = \"START_FETCH_ROUTING_PROBLEM\";\nexport const END_FETCH_ROUTING_PROBLEM = \"END_FETCH_ROUTING_PROBLEM\";\nexport const SET_CURRENT_TOUR = \"SET_CURRENT_TOUR\";\nexport const MOVE_TO_POINT = \"MOVE_TO_POINT\";\nexport const SHOW_ROUTING_PROBLEM_RESULT = \"SHOW_ROUTING_PROBLEM_RESULT\";\nexport const SET_JOB_LIST_VALUE = \"SET_JOB_LIST_VALUE\";\nexport const SHOW_JOBS_EDITOR_MODAL = \"SHOW_JOBS_EDITOR_MODAL\";\nexport const SHOW_PROFILE_FORM_MODAL = \"SHOW_PROFILE_FORM_MODAL\";\nexport const ADD_SERVICE_PROFILE = \"ADD_SERVICE_PROFILE\";\nexport const EDIT_SERVICE_PROFILE = \"EDIT_SERVICE_PROFILE\";\nexport const SET_EDIT_SERVICE_PROFILE = \"SET_EDIT_SERVICE_PROFILE\";\nexport const DELETE_SERVICE_PROFILE = \"DELETE_SERVICE_PROFILE\";\nexport const SET_JOB_FIELD = \"SET_JOB_FIELD\";\nexport const SET_LOCATION_FIELD = \"SET_LOCATION_FIELD\";\nexport const REMOVE_JOB_FIELD = \"REMOVE_JOB_FIELD\";\nexport const ADD_JOB_LIST_VALUE = \"ADD_JOB_LIST_VALUE\";\nexport const REMOVE_JOB_LIST_VALUE = \"REMOVE_JOB_LIST_VALUE\";\nexport const SET_IS_BATCH_EDITING = \"SET_IS_BATCH_EDITING\";\nexport const SET_IS_DROPDOWN_TOGGLED = \"SET_IS_DROPDOWN_TOGGLED\";\nexport const GET_DB_DATA = \"GET_DB_DATA\";\n","import {\n  ADD_JOB_LIST_VALUE,\n  ADD_SERVICE_PROFILE,\n  DELETE_SERVICE_PROFILE,\n  EDIT_SERVICE_PROFILE,\n  END_FETCH_ROUTING_PROBLEM,\n  GET_DB_DATA,\n  GET_JOBS_LIST,\n  GET_ROUTING_PROBLEM,\n  GET_TOUR,\n  MAPBOX_READY,\n  MAPBOX_VIEWPORT_CHANGE,\n  MOVE_TO_POINT,\n  REMOVE_JOB_FIELD,\n  REMOVE_JOB_LIST_VALUE,\n  RESIZE_WINDOW,\n  SET_CURRENT_TOUR,\n  SET_EDIT_SERVICE_PROFILE,\n  SET_ERROR_MESSAGE,\n  SET_FORM_DATA,\n  SET_IS_BATCH_EDITING,\n  SET_IS_DROPDOWN_TOGGLED,\n  SET_JOB_FIELD,\n  SET_JOB_LIST_VALUE,\n  SET_LOCATION_FIELD,\n  SHOW_JOBS_EDITOR_MODAL,\n  SHOW_PROFILE_FORM_MODAL,\n  SHOW_ROUTING_PROBLEM_RESULT,\n  START_FETCH_ROUTING_PROBLEM,\n} from \"./actionTypes\";\n\nexport const getDBData = (data) => ({\n  type: GET_DB_DATA,\n  payload: {\n    data,\n  },\n});\n\nexport const mapboxReady = () => ({\n  type: MAPBOX_READY,\n  payload: {},\n});\n\nexport const mapboxViewportChange = (viewport) => ({\n  type: MAPBOX_VIEWPORT_CHANGE,\n  payload: {\n    viewport,\n  },\n});\n\nexport const changeWindowSize = (width, height) => ({\n  type: RESIZE_WINDOW,\n  payload: {\n    width,\n    height,\n  },\n});\n\nexport const getJobsList = (jobList) => ({\n  type: GET_JOBS_LIST,\n  payload: {\n    jobList,\n  },\n});\n\nexport const setFormData = (params) => ({\n  type: SET_FORM_DATA,\n  payload: {\n    params,\n  },\n});\n\nexport const getRoutingProblem = (json) => ({\n  type: GET_ROUTING_PROBLEM,\n  payload: {\n    json,\n  },\n});\n\nexport const getTour = (tour) => ({\n  type: GET_TOUR,\n  payload: {\n    tour,\n  },\n});\n\nexport const setErrorMessage = (params) => ({\n  type: SET_ERROR_MESSAGE,\n  payload: {\n    params,\n  },\n});\n\nexport const startFetchRoutingProblem = () => ({\n  type: START_FETCH_ROUTING_PROBLEM,\n  payload: {},\n});\n\nexport const endFetchRoutingProblem = () => ({\n  type: END_FETCH_ROUTING_PROBLEM,\n  payload: {},\n});\n\nexport const setCurrentTour = (tourId) => ({\n  type: SET_CURRENT_TOUR,\n  payload: {\n    tourId,\n  },\n});\n\nexport const moveToPoint = (coords) => ({\n  type: MOVE_TO_POINT,\n  payload: {\n    coords,\n  },\n});\n\nexport const showRoutingProblemResult = (status) => ({\n  type: SHOW_ROUTING_PROBLEM_RESULT,\n  payload: {\n    status,\n  },\n});\n\nexport const showJobsEditorModal = (status) => ({\n  type: SHOW_JOBS_EDITOR_MODAL,\n  payload: {\n    status,\n  },\n});\n\nexport const showProfileFormModal = (status) => ({\n  type: SHOW_PROFILE_FORM_MODAL,\n  payload: {\n    status,\n  },\n});\n\nexport const addServiceProfile = (profile) => ({\n  type: ADD_SERVICE_PROFILE,\n  payload: {\n    profile,\n  },\n});\n\nexport const setEditServiceProfile = (profile) => ({\n  type: SET_EDIT_SERVICE_PROFILE,\n  payload: {\n    profile,\n  },\n});\n\nexport const deleteServiceProfile = (profile) => ({\n  type: DELETE_SERVICE_PROFILE,\n  payload: {\n    profile,\n  },\n});\n\nexport const setJobJistValue = (params, index) => ({\n  type: SET_JOB_LIST_VALUE,\n  payload: {\n    params,\n    index,\n  },\n});\n\nexport const editServiceProfile = (params, name) => ({\n  type: EDIT_SERVICE_PROFILE,\n  payload: {\n    params,\n    name,\n  },\n});\n\nexport const setJobField = (field) => ({\n  type: SET_JOB_FIELD,\n  payload: {\n    field,\n  },\n});\n\nexport const setLocationField = (field) => ({\n  type: SET_LOCATION_FIELD,\n  payload: {\n    field,\n  },\n});\n\nexport const removeJobField = (id) => ({\n  type: REMOVE_JOB_FIELD,\n  payload: {\n    id,\n  },\n});\n\nexport const addJobJistValue = (params) => ({\n  type: ADD_JOB_LIST_VALUE,\n  payload: {\n    params,\n  },\n});\n\nexport const removeJobJistValue = (index) => ({\n  type: REMOVE_JOB_LIST_VALUE,\n  payload: {\n    index,\n  },\n});\n\nexport const setIsBatchEditing = (status) => ({\n  type: SET_IS_BATCH_EDITING,\n  payload: {\n    status,\n  },\n});\n\nexport const setIsDropdownToggled = (status) => ({\n  type: SET_IS_DROPDOWN_TOGGLED,\n  payload: {\n    status,\n  },\n});\n","export default __webpack_public_path__ + \"static/media/pin.b2a9a09c.png\";","import \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"./styles.css\";\n\nimport * as turf from \"@turf/turf\";\nimport _ from \"lodash\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactMapGL, {\n  FlyToInterpolator,\n  Layer,\n  Popup,\n  Source,\n} from \"react-map-gl\";\nimport { TRANSITION_EVENTS } from \"react-map-gl\";\nimport { connect } from \"react-redux\";\n\nimport { JOB_FIELDS, MAPBOX } from \"../../constants\";\nimport {\n  mapboxReady,\n  mapboxViewportChange,\n  setFormData,\n} from \"../../redux/actions\";\nimport pinImg from \"./images/pin.png\";\n\nfunction MapBox(params) {\n  const {\n    viewportState,\n    mapboxViewportChange,\n    mapboxReady,\n    jobList,\n    mapboxApiAccessToken,\n    setFormData,\n    routingProblem,\n    isMapboxReady,\n    tours,\n    currentTourId,\n    flyToPoint,\n    serviceProfiles,\n  } = params;\n\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupData, setPopupData] = useState(null);\n  const [routesGeojson, setRoutesGeojson] = useState(null);\n  const [jobListGeojson, setJobListGeojson] = useState(null);\n  const [serviceProfilesGeojson, setServiceProfilesGeojson] = useState(null);\n  const [currentRouteGeojson, setCurrentRouteGeojson] = useState(null);\n  const refMap = useRef(null);\n\n  useEffect(() => {\n    const currentTour = tours && tours[currentTourId];\n\n    if (routesGeojson && currentTourId) {\n      const filteredTour = _.filter(routesGeojson.features, function (feature) {\n        return feature.properties.vehicleId === currentTourId;\n      });\n      setCurrentRouteGeojson(turf.featureCollection(filteredTour));\n    } else {\n      setCurrentRouteGeojson(null);\n    }\n  }, [currentTourId, tours]);\n\n  useEffect(() => {\n    if (flyToPoint) {\n      doFlyTo(turf.point([flyToPoint.lng, flyToPoint.lat]));\n    }\n  }, [flyToPoint]);\n\n  useEffect(() => {\n    if (currentRouteGeojson) {\n      doFlyTo(currentRouteGeojson);\n    }\n  }, [currentRouteGeojson]);\n\n  useEffect(() => {\n    if (jobList && jobList.length > 0 && isMapboxReady) {\n      const newJobListGeojson = objToGeoJSON(jobList);\n      if (jobListGeojson === null) {\n        doFlyTo(newJobListGeojson);\n      }\n      setJobListGeojson(newJobListGeojson);\n    }\n  }, [jobList, isMapboxReady]);\n\n  useEffect(() => {\n    if (serviceProfiles) {\n      setServiceProfilesGeojson(\n        objToGeoJSON(_.filter(serviceProfiles, { active: true }))\n      );\n    }\n  }, [serviceProfiles]);\n\n  useEffect(() => {\n    if (jobListGeojson) {\n      refMap.current.getMap().getSource(\"job-list\") &&\n        refMap.current.getMap().getSource(\"job-list\").setData(jobListGeojson);\n    }\n  }, [jobListGeojson]);\n\n  useEffect(() => {\n    if (serviceProfilesGeojson) {\n      refMap.current.getMap().getSource(\"service-profiles\") &&\n        refMap.current\n          .getMap()\n          .getSource(\"service-profiles\")\n          .setData(serviceProfilesGeojson);\n    }\n  }, [serviceProfilesGeojson]);\n\n  useEffect(() => {\n    const toursCollection = turf.featureCollection([]);\n    _.map(tours, (tour) => {\n      const lineColor = getRandomColor();\n      _.map(tour.sections, (section) => {\n        const sectionFeature = turf.lineString(section.polyline.polyline, {\n          id: section.id,\n          departureTime: section.departure.time,\n          arrivalTime: section.arrival.time,\n          vehicleId: tour.vehicleId,\n          color: lineColor,\n        });\n        toursCollection.features.push(turf.flip(sectionFeature));\n      });\n    });\n    setRoutesGeojson(toursCollection);\n  }, [tours]);\n\n  const doFlyTo = (geojson) => {\n    const bboxArray = turf.bbox(geojson);\n    const bbox = [\n      [bboxArray[0], bboxArray[1]],\n      [bboxArray[2], bboxArray[3]],\n    ];\n\n    const flyToProps = refMap.current.getMap().cameraForBounds(bbox, {\n      padding: { top: 30, bottom: 30, left: 30, right: 30 },\n    });\n\n    updateViewport({\n      transitionDuration: 2000,\n      transitionInterpolator: new FlyToInterpolator(),\n      zoom: flyToProps.zoom < 17 ? flyToProps.zoom : 17,\n      latitude: flyToProps.center.lat,\n      longitude: flyToProps.center.lng,\n    });\n  };\n\n  const getRandomColor = () => {\n    return \"#000000\".replace(/0/g, function () {\n      return (~~(Math.random() * 16)).toString(16);\n    });\n  };\n\n  const objToGeoJSON = (list) => {\n    if (!list) {\n      return turf.featureCollection([]);\n    }\n\n    const features = _.map(list, (obj) => {\n      return turf.point([+obj.longitude, +obj.latitude], obj);\n    });\n    return turf.featureCollection(features);\n  };\n\n  const getLinesFromRoutingProblem = (json) => {\n    if (!(json.tours && json.tours.length)) {\n      return turf.featureCollection([]);\n    }\n\n    const features = _.map(json.tours, (vehicle) => {\n      const line = _.map(vehicle.stops, (stop) => {\n        return [stop.location.lng, stop.location.lat];\n      });\n      return turf.lineString(line, { vehicleId: vehicle.vehicleId });\n    });\n\n    return turf.featureCollection(features);\n  };\n\n  const updateViewport = (viewport) => {\n    mapboxViewportChange(viewport);\n  };\n\n  const _onClick = (event) => {\n    const targetFeture = event.features[0];\n    setShowPopup(false);\n\n    console.log(targetFeture);\n\n    if (\n      targetFeture &&\n      targetFeture.layer.id.indexOf(\"service-profiles\") !== -1\n    ) {\n      setPopupData(targetFeture.properties);\n      setShowPopup(true);\n    }\n\n    if (targetFeture && targetFeture.layer.id.indexOf(\"job-list\") !== -1) {\n      setPopupData(targetFeture.properties);\n      setShowPopup(true);\n    }\n  };\n\n  return (\n    <ReactMapGL\n      ref={refMap}\n      mapboxApiAccessToken={mapboxApiAccessToken || MAPBOX.API_TOKEN}\n      {...viewportState}\n      width={\"100%\"}\n      height={\"100%\"}\n      onClick={_onClick}\n      onViewportChange={updateViewport}\n      onLoad={mapboxReady}\n    >\n      {routesGeojson && (\n        <Source id=\"routes\" type=\"geojson\" data={routesGeojson}>\n          <Layer\n            id=\"routes--outline\"\n            type=\"line\"\n            paint={{\n              \"line-color\": \"#000000\",\n              \"line-width\": 3,\n              \"line-opacity\": currentRouteGeojson ? 0 : 1,\n            }}\n          />\n          <Layer\n            id=\"routes\"\n            type=\"line\"\n            paint={{\n              \"line-color\": [\"get\", \"color\"],\n              \"line-width\": 2,\n              \"line-opacity\": currentRouteGeojson ? 0.2 : 1,\n            }}\n          />\n          <Layer\n            id=\"routes--name\"\n            type=\"symbol\"\n            paint={{\n              \"text-halo-color\": \"#fff\",\n              \"text-halo-width\": 2,\n            }}\n            layout={{\n              \"text-field\": [\"get\", \"vehicleId\"],\n              \"text-size\": 10,\n              \"symbol-placement\": \"line\",\n            }}\n          />\n        </Source>\n      )}\n      {currentRouteGeojson && (\n        <Source id=\"current-route\" type=\"geojson\" data={currentRouteGeojson}>\n          <Layer\n            id=\"current-route--outline\"\n            type=\"line\"\n            paint={{\n              \"line-color\": \"#000000\",\n              \"line-width\": 3,\n            }}\n          />\n          <Layer\n            id=\"current-route\"\n            type=\"line\"\n            paint={{\n              \"line-color\": [\"get\", \"color\"],\n              \"line-width\": 2,\n            }}\n          />\n        </Source>\n      )}\n      {jobListGeojson && (\n        <Source id=\"job-list\" type=\"geojson\" data={jobListGeojson}>\n          <Layer\n            id=\"job-list\"\n            type=\"circle\"\n            paint={{\n              \"circle-radius\": 8,\n              \"circle-color\": \"#FFFFFF\",\n              \"circle-stroke-width\": 2,\n              \"circle-stroke-color\": \"#FF3900\",\n            }}\n          />\n          <Layer\n            id=\"job-list--id\"\n            type=\"symbol\"\n            paint={{\n              \"text-halo-color\": \"#fff\",\n              \"text-halo-width\": 1,\n            }}\n            layout={{\n              \"text-field\": [\"get\", \"JobID\"],\n              \"text-size\": 10,\n            }}\n          />\n        </Source>\n      )}\n      {serviceProfiles && serviceProfiles.length && (\n        <Source\n          id=\"service-profiles\"\n          type=\"geojson\"\n          data={serviceProfilesGeojson}\n        >\n          <Layer\n            id=\"service-profiles\"\n            type=\"circle\"\n            paint={{\n              \"circle-radius\": 8,\n              \"circle-color\": \"#FFFFFF\",\n              \"circle-stroke-width\": 5,\n              //'circle-opacity': [\"match\", ['get', 'active'], true, 1, 0.25] ,\n              \"circle-stroke-color\": \"#078600\",\n            }}\n          />\n        </Source>\n      )}\n      {showPopup && popupData && (\n        <Popup\n          latitude={+popupData.latitude}\n          longitude={+popupData.longitude}\n          closeButton={true}\n          closeOnClick={false}\n          onClose={() => setShowPopup(false)}\n          anchor=\"top\"\n        >\n          <div>\n            {_.map(popupData, (value, key) => {\n              return (\n                <p key={key}>\n                  <b>{key}:</b> {String(value)}\n                </p>\n              );\n            })}\n          </div>\n        </Popup>\n      )}\n    </ReactMapGL>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    viewportState: state.mapbox.viewport,\n    jobList: state.jobList.list,\n    routingProblem: state.routingProblem.results,\n    tours: state.routingProblem.tours,\n    isMapboxReady: state.mapbox.isMapboxReady,\n    currentTourId: state.mapbox.currentTourId,\n    flyToPoint: state.mapbox.flyToPoint,\n    serviceProfiles: state.serviceProfiles.profiles,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  mapboxViewportChange,\n  mapboxReady,\n  setFormData,\n})(MapBox);\n","import React from \"react\";\n//import { connect, useDispatch } from \"react-redux\";\nimport { Col, Container, Row, Spinner, Table } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\n\nimport MapBox from \"../../components/MapBox/MapBox\";\n\nfunction GeocodePage(params) {\n  const {} = params;\n  const jobsList = useSelector((state) => state.jobList.db);\n\n  //console.log(jobsList);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {!jobsList.length &&\n            <Spinner animation=\"border\" />\n          }\n          {!!jobsList.length &&\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <td>JobID</td>\n                  <td>StreetAddress</td>\n                  <td>City</td>\n                  <td>Zip</td>\n                  <td>Coordinates</td>\n                </tr>\n              </thead>\n              <tbody>\n              {jobsList.map((item, key) => {\n                return (\n                  <tr key={key} className={item.coordinates === \"error\" ? \"error\" : \"\"}>\n                    <td>{item.JobID}</td>\n                    <td>{item.StreetAddress}</td>\n                    <td>{item.City}</td>\n                    <td>{item.Zip}</td>\n                    <td>\n                      {item.coordinates === undefined &&\n                        <Spinner animation=\"border\" size=\"sm\" />\n                      }\n                      {item.coordinates !== undefined &&\n                        item.coordinates\n                      }\n                    </td>\n                  </tr>\n                );\n              })}\n              </tbody>\n            </Table>\n          }\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default GeocodePage;\n","export const routePath = {\n  upload: \"/upload\",\n  import: \"/import\",\n  geocode: \"/geocode\",\n  map: \"/map\",\n};\n\nexport default routePath;\n","import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\nfunction ModalComponent(params) {\n  const {\n    isOpen = false,\n    size,\n    onHide,\n    titleText = \"\",\n    dialogClassName,\n    children,\n  } = params;\n\n  const [show, setShow] = useState(isOpen);\n\n  useEffect(() => {\n    setShow(isOpen);\n  }, [isOpen]);\n\n  const handleClose = () => {\n    onHide();\n    setShow(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        show={show}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        size={size}\n        dialogClassName={dialogClassName}\n        centered\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{titleText}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{children}</Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ModalComponent;\n","//import {} from '../../redux/actions';\nimport \"../styles.css\";\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\n\nexport default function DropdownMenu(params) {\n  const {\n    selectedItem,\n    selectedItems,\n    noneItemText,\n    items,\n    onClick,\n    style,\n    disabled,\n    onToggle = () => {},\n  } = params;\n\n  const _onClick = ({ target }) => {\n    const newValue =\n      target.dataset.active === \"true\" ? undefined : target.dataset.value;\n    onClick(newValue);\n  };\n\n  return (\n    <DropdownButton\n      disabled={disabled}\n      onToggle={(isOpen, event, metadata) => {\n        onToggle({ isOpen, event, metadata });\n      }}\n      variant={selectedItem ? \"primary\" : \"secondary\"}\n      title={selectedItem ? selectedItem : noneItemText}\n    >\n      {selectedItem && (\n        <Dropdown.Item style={style} key={\"undefined\"} onClick={_onClick}>\n          <span className={\"font-italic text-secondary\"}>None</span>\n        </Dropdown.Item>\n      )}\n      {items.length > 0 &&\n        _.map(items, (item, key) => (\n          <Dropdown.Item\n            style={style}\n            key={key}\n            active={selectedItem && item === selectedItem}\n            disabled={\n              !(selectedItem && item === selectedItem) &&\n              selectedItems.find((item_selected) => item === item_selected) !==\n                undefined\n            }\n            data-value={item}\n            data-active={selectedItem && item === selectedItem}\n            onClick={_onClick}\n          >\n            {item}\n          </Dropdown.Item>\n        ))}\n      {!items.length && <Dropdown.Header>No available fields</Dropdown.Header>}\n    </DropdownButton>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/trash.21051786.svg\";","import \"./styles.css\";\n\nimport _ from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { FIELDS_TYPES, JOB_LIST_INDEX_KEY } from \"../../constants\";\nimport {\n  removeJobField,\n  setIsDropdownToggled,\n  setJobField,\n} from \"../../redux/actions\";\nimport DropdownMenu from \"../../ui-elements/DropdownMenu\";\nimport trashSVG from \"./images/trash.svg\";\n\nfunction JobDetailsForm(params) {\n  const { onSubmit, onCancel } = params;\n\n  const jobList = useSelector((state) => state.jobList.list);\n  const jobFields = useSelector((state) => state.jobList.jobFields);\n  const locationFields = useSelector((state) => state.jobList.locationFields);\n  const dispatch = useDispatch();\n  const [jobListKeys, setJobListKeys] = useState([]);\n  const [customFieldInput, setCustomFieldInput] = useState(\"\");\n  const [selectedJobListKeys, setSelectedJobListKeys] = useState([]);\n\n  useEffect(() => {\n    if (jobList && jobList.length) {\n      setJobListKeys(\n        _.filter(Object.keys(jobList[0]), (key) => key !== JOB_LIST_INDEX_KEY)\n      );\n    }\n  }, [jobList]);\n\n  useEffect(() => {\n    if (jobList && locationFields && jobFields) {\n      const locationFieldsKeys = _.map(locationFields, (field) => field.key);\n      const jobFieldsKeys = _.map(jobFields, (field) => field.key);\n      const mergedFields = [...locationFieldsKeys, ...jobFieldsKeys];\n\n      setSelectedJobListKeys(\n        mergedFields.filter((field) => field !== undefined)\n      );\n    }\n  }, [jobList, locationFields, jobFields]);\n\n  return (\n    <div className=\"csv-details-form-wrapper\">\n      <Row>\n        <Col>\n          <div className=\"csv-details-form_header\">\n            <div className=\"step-marker\">2</div>\n            <div>Job Details</div>\n          </div>\n        </Col>\n      </Row>\n      <Row className=\"csv-details-form_container\">\n        <Col>\n          <div className=\"vertical-line\" />\n          <div style={{ width: \"100%\" }}>\n            <Row>\n              <Col className=\"csv-details-form\">\n                {_.map(jobFields, (field, fieldKey) => (\n                  <Row\n                    key={fieldKey}\n                    noGutters\n                    style={{ margin: \"5px 0 5px 0\" }}\n                  >\n                    <Col sm=\"6\">\n                      <p\n                        className={field.required ? \"hint-required\" : \"\"}\n                        style={{ margin: \"5px 10px 5px 0\", textAlign: \"right\" }}\n                      >\n                        {field.custom && (\n                          <img\n                            src={trashSVG}\n                            width={\"13\"}\n                            className=\"delete-icon\"\n                            onClick={() => {\n                              dispatch(removeJobField(field.id));\n                            }}\n                          />\n                        )}\n                        {field.name}:\n                      </p>\n                    </Col>\n                    <Col sm=\"6\">\n                      <DropdownMenu\n                        noneItemText={\"Select column\"}\n                        key={fieldKey}\n                        onToggle={({ isOpen }) => {\n                          dispatch(setIsDropdownToggled(isOpen));\n                        }}\n                        selectedItem={field.key}\n                        selectedItems={selectedJobListKeys}\n                        items={jobListKeys}\n                        onClick={(newItem) => {\n                          dispatch(setJobField({ ...field, key: newItem }));\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                ))}\n                <Row key={\"custom\"} noGutters style={{ margin: \"5px 0 5px 0\" }}>\n                  <Col sm=\"6\">\n                    <Form.Control\n                      style={{ width: \"95%\" }}\n                      type=\"text\"\n                      placeholder=\"Custom Attribute\"\n                      value={customFieldInput}\n                      onChange={(e) =>\n                        e.target.value.length <= 15 &&\n                        setCustomFieldInput(e.target.value)\n                      }\n                    />\n                  </Col>\n                  <Col sm=\"6\">\n                    <DropdownMenu\n                      noneItemText={\"Select type\"}\n                      key={\"custom\"}\n                      disabled={!(customFieldInput.length > 0)}\n                      items={Object.keys(FIELDS_TYPES)}\n                      selectedItems={selectedJobListKeys}\n                      onClick={(newItem) => {\n                        dispatch(\n                          setJobField({\n                            id: `custom_ ${customFieldInput}`,\n                            name: customFieldInput,\n                            descr: null,\n                            type: newItem,\n                          })\n                        );\n                        setCustomFieldInput(\"\");\n                      }}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n            <Row className=\"csv-details-form_buttons\">\n              <Col>\n                <Button\n                  block\n                  onClick={onSubmit}\n                  disabled={\n                    !!_.find(jobFields, (field) =>\n                      field.required ? field.key === undefined : false\n                    )\n                  }\n                >\n                  IMPORT\n                </Button>\n              </Col>\n              <Col>\n                <Button block variant=\"link\" onClick={onCancel}>\n                  CANCEL\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default JobDetailsForm;\n","import \"./styles.css\";\n\nimport _ from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { JOB_LIST_INDEX_KEY } from \"../../constants\";\nimport { setIsDropdownToggled, setLocationField } from \"../../redux/actions\";\nimport DropdownMenu from \"../../ui-elements/DropdownMenu\";\n\nfunction LocationDetailsForm(params) {\n  const { onSubmit, onCancel } = params;\n\n  const jobList = useSelector((state) => state.jobList.list);\n  const jobFields = useSelector((state) => state.jobList.jobFields);\n  const locationFields = useSelector((state) => state.jobList.locationFields);\n  const dispatch = useDispatch();\n  const [jobListKeys, setJobListKeys] = useState([]);\n  const [selectedJobListKeys, setSelectedJobListKeys] = useState([]);\n\n  useEffect(() => {\n    if (jobList && jobList.length) {\n      setJobListKeys(\n        _.filter(Object.keys(jobList[0]), (key) => key !== JOB_LIST_INDEX_KEY)\n      );\n    }\n  }, [jobList]);\n\n  useEffect(() => {\n    if (jobList && locationFields && jobFields) {\n      const locationFieldsKeys = _.map(locationFields, (field) => field.key);\n      const jobFieldsKeys = _.map(jobFields, (field) => field.key);\n      const mergedFields = [...locationFieldsKeys, ...jobFieldsKeys];\n\n      setSelectedJobListKeys(\n        mergedFields.filter((field) => field !== undefined)\n      );\n    }\n  }, [jobList, locationFields, jobFields]);\n\n  return (\n    <div className=\"csv-details-form-wrapper\">\n      <Row>\n        <Col>\n          <div className=\"csv-details-form_header\">\n            <div className=\"step-marker\">1</div>\n            <div>Location Details</div>\n          </div>\n        </Col>\n      </Row>\n      <Row className=\"csv-details-form_container\">\n        <Col>\n          <div className=\"vertical-line\" />\n          <div style={{ width: \"100%\" }}>\n            <Row>\n              <Col className=\"csv-details-form\">\n                {_.map(locationFields, (field, fieldKey) => (\n                  <Row\n                    key={fieldKey}\n                    noGutters\n                    style={{ margin: \"5px 0 5px 0\" }}\n                  >\n                    <Col sm=\"6\">\n                      <p\n                        className={field.required ? \"hint-required\" : \"\"}\n                        style={{ margin: \"5px 10px 5px 0\", textAlign: \"right\" }}\n                      >\n                        {field.name}:\n                      </p>\n                    </Col>\n                    <Col sm=\"6\">\n                      <DropdownMenu\n                        noneItemText={\"Select column\"}\n                        key={fieldKey}\n                        onToggle={({ isOpen }) => {\n                          dispatch(setIsDropdownToggled(isOpen));\n                        }}\n                        selectedItems={selectedJobListKeys}\n                        selectedItem={field.key}\n                        items={jobListKeys}\n                        onClick={(newItem) => {\n                          dispatch(\n                            setLocationField({ ...field, key: newItem })\n                          );\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                ))}\n              </Col>\n            </Row>\n            <Row className=\"csv-details-form_buttons\">\n              <Col>\n                <Button\n                  block\n                  onClick={onSubmit}\n                  disabled={\n                    !!_.find(locationFields, (field) =>\n                      field.required ? field.key === undefined : false\n                    )\n                  }\n                >\n                  CONTINUE\n                </Button>\n              </Col>\n              <Col>\n                <Button block variant=\"link\" onClick={onCancel}>\n                  CANCEL\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default LocationDetailsForm;\n","import \"./styles.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { routePath } from \"routing\";\n\nimport Modal from \"../Modal/Modal\";\nimport JobDetailsForm from \"./JobDetailsForm\";\nimport LocationDetailsForm from \"./LocationDetailsForm\";\n\nfunction CSVDetailsForms(params) {\n  const {} = params;\n\n  let history = useHistory();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [isModalSaveDataOpen, setIsModalSaveDataOpen] = useState(false);\n  const [isModalCancelOpen, setIsModalCancelOpen] = useState(false);\n  const isBatchEditing = useSelector((state) => state.jobList.isBatchEditing);\n  const isDropdownToggled = useSelector(\n    (state) => state.jobList.isDropdownToggled\n  );\n\n  useEffect(() => {\n    if (isBatchEditing && isDropdownToggled) {\n      setIsModalOpen(true);\n    }\n  }, [isBatchEditing, isDropdownToggled]);\n\n  const _onCancel = () => setIsModalCancelOpen(true);\n\n  return (\n    <>\n      <Row\n        style={{\n          overflowY: \"auto\",\n          height: \"100vh\",\n        }}\n      >\n        <Col>\n          {currentStep > 0 && (\n            <Row>\n              <Col>\n                <Button\n                  variant=\"link\"\n                  onClick={() =>\n                    setCurrentStep(\n                      (current_currentStep) => current_currentStep - 1\n                    )\n                  }\n                >\n                  {\"← BACK\"}\n                </Button>\n              </Col>\n            </Row>\n          )}\n          {currentStep === 0 && (\n            <LocationDetailsForm\n              onSubmit={() => {\n                setCurrentStep(1);\n              }}\n              onCancel={_onCancel}\n            />\n          )}\n          {currentStep === 1 && (\n            <JobDetailsForm\n              onSubmit={() => {\n                history.push(routePath.geocode);\n              }}\n              onCancel={_onCancel}\n            />\n          )}\n        </Col>\n      </Row>\n      <Modal\n        isOpen={isModalSaveDataOpen}\n        onHide={() => setIsModalSaveDataOpen(false)}\n        titleText={\"Warning: unsaved data\"}\n      >\n        <Row>\n          <Col className={\"text-center mb-3\"}>\n            <h5>Please, save or cancel changes in grid</h5>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button\n              block\n              variant={\"secondary\"}\n              onClick={() => {\n                setIsModalOpen(false);\n              }}\n            >\n              Got it\n            </Button>\n          </Col>\n        </Row>\n      </Modal>\n      <Modal\n        isOpen={isModalCancelOpen}\n        onHide={() => setIsModalCancelOpen(false)}\n        titleText={\"Warning:\"}\n      >\n        <Row>\n          <Col className={\"text-center mb-3\"}>\n            <h5>Are you sure you want to close the editor?</h5>\n            <h5>Сhanges will not be saved.</h5>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Button\n              block\n              variant={\"danger\"}\n              onClick={() => {\n                setIsModalCancelOpen(false);\n                history.push(routePath.upload);\n              }}\n            >\n              Yes\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              block\n              variant={\"secondary\"}\n              onClick={() => {\n                setIsModalCancelOpen(false);\n              }}\n            >\n              Cancel\n            </Button>\n          </Col>\n        </Row>\n      </Modal>\n    </>\n  );\n}\n\nexport default CSVDetailsForms;\n","import \"./styles.css\";\nimport \"@syncfusion/ej2/material.css\";\n\nimport {\n  Aggregate,\n  AggregateColumnDirective,\n  AggregateColumnsDirective,\n  AggregateDirective,\n  AggregatesDirective,\n  ColumnDirective,\n  ColumnMenu,\n  ColumnsDirective,\n  Edit,\n  Filter,\n  GridComponent,\n  Inject,\n  Page,\n  Resize,\n  Sort,\n  Toolbar,\n} from \"@syncfusion/ej2-react-grids\";\nimport _ from \"lodash\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { FIELDS_TYPES, GRID_ID, JOB_LIST_INDEX_KEY } from \"../../constants\";\nimport {\n  addJobJistValue,\n  removeJobJistValue,\n  setIsBatchEditing,\n  setJobJistValue,\n} from \"../../redux/actions\";\n\nexport default function DataGrid(params) {\n  const {} = params;\n\n  const _gridRef = useRef();\n  const dispatch = useDispatch();\n  const [isGridReady, setIsGridReady] = useState(false);\n  const jobList = useSelector((state) => state.jobList.list);\n  const locationFields = useSelector((state) => state.jobList.locationFields);\n  const jobFields = useSelector((state) => state.jobList.jobFields);\n  const fieldsParams = [\n    ...Object.values(locationFields),\n    ...Object.values(jobFields),\n  ];\n\n  const isFieldValid = (column, data) => {\n    if (column === undefined) return true;\n    const { field, validationRules } = column;\n    let isValid = true;\n    if (field && validationRules) {\n      const currentField = fieldsParams.find(\n        (fieldParams) => fieldParams.key === field\n      );\n      if (currentField) {\n        const isRequiredValid = currentField.required\n          ? data[currentField.key] && data[currentField.key].length > 0\n          : true;\n        const isValueValid = validationRules.regex[0].test(\n          String(data[currentField.key])\n        );\n        if (!isValueValid || !isRequiredValid) {\n          isValid = false;\n        }\n      }\n    }\n    return isValid;\n  };\n\n  const getCellStyle = ({ column, data, cell }) => {\n    if (column) {\n      if (!isFieldValid(column, data)) {\n        cell.classList.add(\"cell-error\");\n      }\n    }\n  };\n\n  const getColumnValidationRules = (field) => {\n    if (field && field.key) {\n      return {\n        ...FIELDS_TYPES[field.type].validationRules,\n        required: field.required === true,\n      };\n    }\n    return undefined;\n  };\n\n  const getColumnSortComparer = (field) => {\n    if (\n      field &&\n      field.key &&\n      FIELDS_TYPES[field.type].sortComparer !== undefined\n    ) {\n      return (reference, comparer, referenceRow, comparerRow) => {\n        const currentCol = _gridRef.current.getColumnByField(field.key);\n        const sortResult = FIELDS_TYPES[field.type].sortComparer(\n          reference,\n          comparer,\n          referenceRow,\n          comparerRow\n        );\n        return currentCol.sortDirection === \"Descending\"\n          ? sortResult\n          : sortResult * -1;\n      };\n    }\n    return undefined;\n  };\n\n  const getFieldParamsByKey = (key) => {\n    if (!key) return undefined;\n    return fieldsParams.find((field) => field.key === key);\n  };\n\n  const clearColumnStorage = () => {\n    let localStorage = JSON.parse(\n      window.localStorage.getItem(\"grid\" + GRID_ID)\n    );\n    if (localStorage) {\n      delete localStorage[\"columns\"];\n      window.localStorage.setItem(\n        \"grid\" + GRID_ID,\n        JSON.stringify(localStorage)\n      );\n    }\n  };\n\n  const setCurrentPageStorage = (page) => {\n    let localStorage = JSON.parse(\n      window.localStorage.getItem(\"grid\" + GRID_ID)\n    );\n    if (localStorage) {\n      localStorage.pageSettings.currentPage = page;\n\n      window.localStorage.setItem(\n        \"grid\" + GRID_ID,\n        JSON.stringify(localStorage)\n      );\n    }\n  };\n\n  //clear columns state for enablePersistence\n  useEffect(() => {\n    clearColumnStorage();\n  }, []);\n\n  useEffect(() => {\n    if (isGridReady && _gridRef.current) {\n      _.map(_gridRef.current.columns, (column) => {\n        const fieldParams = getFieldParamsByKey(column.field);\n        column.validationRules = getColumnValidationRules(fieldParams);\n        column.sortComparer = getColumnSortComparer(fieldParams);\n      });\n\n      _gridRef.current.componentRefresh();\n      _gridRef.current.refreshHeader();\n      _gridRef.current.clearFiltering();\n      _gridRef.current.clearSorting();\n    }\n  }, [jobFields, locationFields]);\n\n  useEffect(() => {\n    if (isGridReady && _gridRef.current) {\n      _gridRef.current.autoFitColumns();\n      //update component height\n      setTimeout(() => _gridRef.current.componentRefresh(), 250);\n    }\n  }, [isGridReady]);\n\n  useEffect(() => {\n    if (jobList) {\n      _gridRef.current.dataSource = [...jobList];\n      _gridRef.current.refresh();\n    }\n  }, [jobList]);\n\n  if (!jobList) return null;\n\n  const jobListKeys = Object.keys(jobList[0]);\n\n  const _beforeBatchSave = ({ batchChanges }) => {\n    _.map(batchChanges.addedRecords, (job) => {\n      dispatch(addJobJistValue(job));\n    });\n\n    _.map(batchChanges.changedRecords, (job) => {\n      dispatch(setJobJistValue(job, job[JOB_LIST_INDEX_KEY]));\n    });\n\n    _.map(batchChanges.deletedRecords, (job) => {\n      dispatch(removeJobJistValue(job[JOB_LIST_INDEX_KEY]));\n    });\n\n    dispatch(setIsBatchEditing(false));\n  };\n\n  const _columnMenuOpen = ({ items, column }) => {\n    const errorsCount = getErrorsFromColumn(column).length;\n    const errorsFilterItem = items.find(({ id }) => id === \"errorsToTop\");\n    errorsFilterItem.hide = errorsCount === 0;\n  };\n\n  const _dataBoundEvent = () => {\n    _gridRef.current.enableToolbarItems(\n      [\"clearFilters\"],\n      Object.keys(_gridRef.current.filterModule.actualPredicate).length > 0\n    );\n  };\n\n  const _columnMenuClick = ({ item, column }) => {\n    if (item.id === \"errorsToTop\") {\n      _gridRef.current.clearFiltering();\n      _gridRef.current.filterByColumn(\n        column.field,\n        \"equal\",\n        getErrorsFromColumn(column)\n      );\n    }\n  };\n\n  const _toolbarClick = ({ item }) => {\n    if (item.id === \"clearFilters\") {\n      _gridRef.current.clearFiltering();\n    }\n  };\n\n  const _footerTemplate = ({ Custom }) => {\n    if (Custom === 0) return null;\n    return <span className={\"header-error\"}>Errors: {Custom}</span>;\n  };\n\n  const _aggregateErrorsCount = (field) => {\n    return () =>\n      getErrorsFromColumn(_gridRef.current.getColumnByField(field)).length;\n  };\n\n  const _actionBegin = ({ requestType, currentPage }) => {\n    if (requestType === \"paging\") {\n      setCurrentPageStorage(currentPage);\n    }\n  };\n\n  const getErrorsFromColumn = (column) => {\n    let errorList = [];\n    _gridRef.current.props.dataSource.map((job) => {\n      if (!isFieldValid(column, job)) {\n        errorList.push(job[column.field]);\n      }\n    });\n    return errorList;\n  };\n\n  return (\n    <GridComponent\n      id={GRID_ID}\n      ref={_gridRef}\n      created={() => setIsGridReady(true)}\n      actionBegin={_actionBegin}\n      batchAdd={() => dispatch(setIsBatchEditing(true))}\n      batchDelete={() => dispatch(setIsBatchEditing(true))}\n      batchCancel={() => dispatch(setIsBatchEditing(false))}\n      beforeBatchSave={_beforeBatchSave}\n      dataBound={_dataBoundEvent}\n      cellSave={({ previousValue, value }) => {\n        if (previousValue !== value) {\n          dispatch(setIsBatchEditing(true));\n        }\n      }}\n      pageSettings={{\n        pageSize: 30,\n        pageSizes: [30, 60, 100],\n      }}\n      dataSource={[...jobList]}\n      enablePersistence={true}\n      allowFiltering={true}\n      allowSorting={true}\n      height={\"100%\"}\n      allowPaging={true}\n      filterSettings={{ type: \"Excel\" }}\n      toolbar={[\n        \"Add\",\n        \"Delete\",\n        \"Update\",\n        \"Cancel\",\n        {\n          text: \"Clear Filters\",\n          tooltipText: \"Clear Filters\",\n          prefixIcon: \"fltr-can2\",\n          id: \"clearFilters\",\n          disabled: true,\n        },\n        \"Search\",\n      ]}\n      toolbarClick={_toolbarClick}\n      editSettings={{\n        allowEditing: true,\n        allowAdding: true,\n        allowDeleting: true,\n        mode: \"Batch\",\n      }}\n      columnMenuItems={[\n        {\n          text: \"Filter by errors\",\n          id: \"errorsToTop\",\n        },\n        \"SortAscending\",\n        \"SortDescending\",\n        \"AutoFit\",\n        \"Filter\",\n      ]}\n      columnMenuOpen={_columnMenuOpen}\n      columnMenuClick={_columnMenuClick}\n      allowResizing={true}\n      allowTextWrap={false}\n      showColumnMenu={true}\n      queryCellInfo={getCellStyle}\n    >\n      <Inject\n        services={[\n          Filter,\n          Sort,\n          Page,\n          Edit,\n          Toolbar,\n          Resize,\n          ColumnMenu,\n          Aggregate,\n        ]}\n      />\n      <ColumnsDirective>\n        <ColumnDirective type=\"checkbox\" />\n        {_.map(jobListKeys, (jobListKey) => (\n          <ColumnDirective\n            key={jobListKey}\n            field={jobListKey}\n            validationRules={getColumnValidationRules(\n              getFieldParamsByKey(jobListKey)\n            )}\n            sortComparer={getColumnSortComparer(\n              getFieldParamsByKey(jobListKey)\n            )}\n            lockColumn={jobListKey === JOB_LIST_INDEX_KEY}\n            visible={jobListKey !== JOB_LIST_INDEX_KEY}\n          />\n        ))}\n      </ColumnsDirective>\n      <AggregatesDirective>\n        <AggregateDirective>\n          <AggregateColumnsDirective>\n            {_.map(jobListKeys, (jobListKey) => (\n              <AggregateColumnDirective\n                key={jobListKey}\n                field={jobListKey}\n                type={\"Custom\"}\n                footerTemplate={_footerTemplate}\n                customAggregate={_aggregateErrorsCount(jobListKey)}\n              />\n            ))}\n          </AggregateColumnsDirective>\n        </AggregateDirective>\n      </AggregatesDirective>\n    </GridComponent>\n  );\n}\n","import \"./styles.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nimport CSVDetailsForms from \"../../components/CSVDetailsForms\";\nimport SpreadsheetComponent from \"../../components/DataGrid\";\n\nfunction ImportPage(params) {\n  const {} = params;\n\n  return (\n    <div>\n      <Row>\n        <Col sm={6} md={5} lg={4}>\n          <Row>\n            <Col>\n              <CSVDetailsForms />\n            </Col>\n          </Row>\n        </Col>\n        <Col sm={6} md={7} lg={8}>\n          <Row>\n            <Col className=\"table-container\">\n              <SpreadsheetComponent />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default ImportPage;\n","import React from \"react\";\n//import { connect, useDispatch } from \"react-redux\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nimport MapBox from \"../../components/MapBox/MapBox\";\n\nfunction MapPage(params) {\n  const {} = params;\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={3}>\n          <p>test</p>\n        </Col>\n        <Col xs={9} style={{ width: \"100%\", height: \"100vh\" }}>\n          <MapBox />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default MapPage;\n","import AWS from \"aws-sdk\";\nimport { AWS as constAWS } from \"constants.js\";\n\nAWS.config.region = constAWS.region;\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n  IdentityPoolId: constAWS.IdentityPoolId,\n});\nAWS.config.apiVersions = {\n  dynamodbstreams: \"2012-08-10\",\n  s3: \"2006-03-01\",\n};\n\nexport const S3Bucket = new AWS.S3({\n  params: { Bucket: constAWS.bucketName },\n});\n\nexport const s3Upload = (file) =>\n  new Promise((resolve, reject) => {\n    if (file) {\n      const fileName = Date.now() + \" - \" + file.name;\n      S3Bucket.upload(\n        {\n          Key: fileName,\n          Body: file,\n          ACL: \"public-read\",\n        },\n        {},\n        function (err, data) {\n          if (err) reject(err);\n          else resolve(data);\n        }\n      );\n    } else {\n      reject(Error(\"Invalid file\"));\n    }\n  });\n\nexport const dynamoDBStreams = new AWS.DynamoDBStreams({\n  region: constAWS.region,\n  credentials: new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: constAWS.IdentityPoolId,\n  }),\n});\n\nexport const dynamoListStreams = () =>\n  new Promise((resolve, reject) => {\n    const params = {\n      TableName: \"DeliveryApp_UploadedFiles\",\n    };\n\n    dynamoDBStreams.listStreams(params, function (err, data) {\n      if (err) reject(err);\n      else resolve(data);\n    });\n  });\n\nexport const dynamoGetShardIterator = () =>\n  new Promise((resolve, reject) => {\n    const params = {\n      TableName: \"DeliveryApp_UploadedFiles\",\n    };\n\n    dynamoDBStreams.getShardIterator(params, function (err, data) {\n      if (err) reject(err);\n      else resolve(data);\n    });\n  });\n\nexport const dynamoDBClient = new AWS.DynamoDB.DocumentClient();\n\nexport const listDynamoDB = ({ file_name }) =>\n  new Promise((resolve, reject) => {\n    const params = {\n      TableName: \"DeliveryApp_UploadedFiles\",\n      KeyConditionExpression: \"#yr = :yyyy\",\n      ExpressionAttributeNames: {\n        \"#yr\": \"file_name\",\n      },\n      ExpressionAttributeValues: {\n        \":yyyy\": file_name,\n      },\n    };\n\n    dynamoDBClient.query(params, function (err, data) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n","//import {} from '../../redux/actions';\nimport \"./styles.css\";\n\nimport $ from \"jquery\";\nimport _ from \"lodash\";\nimport React, { useRef, useState } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport Dropzone from \"react-dropzone\";\n\nfunction UploadFileArea({ onDropAccepted }) {\n  const refDropzone = useRef(null);\n  const [errorMessages, setErrorMessages] = useState(null);\n  const [uploadedFile, setUploadedFile] = useState(null);\n\n  return (\n    <div ref={refDropzone} className=\"dropzone-container\">\n      <Dropzone\n        accept={\".csv\"}\n        maxFiles={1}\n        multiple={false}\n        onDropAccepted={(files) => {\n          $(refDropzone.current).find(\".dropzone\").removeClass(\"dragged\");\n          $(refDropzone.current).find(\".dropzone\").addClass(\"success\");\n          setErrorMessages(null);\n          setUploadedFile(files[0]);\n          onDropAccepted(files[0]);\n        }}\n        onDropRejected={(files) => {\n          $(refDropzone.current).find(\".dropzone\").removeClass(\"dragged\");\n          $(refDropzone.current).find(\".dropzone\").addClass(\"error\");\n          setErrorMessages(\n            _.map(files[0].errors, ({ message }, key) => (\n              <Alert key={key} variant={\"danger\"}>\n                {message}\n              </Alert>\n            ))\n          );\n        }}\n        onDragLeave={(e) => $(e.target).removeClass(\"dragged\")}\n        onDragEnter={(e) => $(e.target).addClass(\"dragged\")}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <div {...getRootProps({ className: \"dropzone\" })}>\n            <input {...getInputProps()} />\n            {!uploadedFile && (\n              <p>\n                Drag &apos;n&apos; drop .CSV file here, or click to select files\n              </p>\n            )}\n            {uploadedFile && (\n              <p className=\"success-message\">\n                Selected file: <span>{uploadedFile.name}</span>\n              </p>\n            )}\n          </div>\n        )}\n      </Dropzone>\n      {errorMessages && <div className=\"error-message\">{errorMessages}</div>}\n    </div>\n  );\n}\n\nexport default UploadFileArea;\n","import { dynamoListStreams, listDynamoDB, s3Upload } from \"aws\";\nimport UploadFileArea from \"components/UploadFileArea\";\nimport * as CSV from \"csv-string\";\nimport jqueryCSV from \"jquery-csv\";\nimport React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { getDBData, getJobsList } from \"redux/actions\";\nimport { routePath } from \"routing\";\n\nimport { GRID_ID } from \"../../constants\";\n\nfunction UploadPage(params) {\n  const {} = params;\n\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  const onDropAccepted = (file) => {\n    window.localStorage.removeItem(\"grid\" + GRID_ID);\n\n    s3Upload(file).then((file_data) => {\n      console.log(file_data);\n      let counter = 0;\n      const interval = setInterval(() => {\n        counter++;\n        listDynamoDB({ file_name: file_data.Key }).then((data) => {\n          console.log(data);\n          dispatch(getDBData(data.Items));\n          const geocodedCount = data.Items.filter((item) => {\n            return item.coordinates !== undefined;\n          }).length;\n          //console.log(geocodedCount);\n          if (counter >= 10 && geocodedCount === data.Items.length) {\n            clearInterval(interval);\n          }\n        });\n      }, 1500);\n    });\n\n    file.text().then((text) => {\n      try {\n        const separator = CSV.detect(text);\n\n        let parsedCSV = jqueryCSV.toObjects(text, { separator });\n\n        parsedCSV = parsedCSV.filter(\n          (row) => Object.values(row).join(\"\").length > 0\n        );\n        parsedCSV = parsedCSV.map((row) => {\n          delete row[\"\"];\n          return row;\n        });\n\n        dispatch(getJobsList(parsedCSV));\n        history.push(routePath.geocode);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <UploadFileArea onDropAccepted={onDropAccepted} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default UploadPage;\n","/* eslint-disable */\n/*\n * Copyright (C) 2019 HERE Europe B.V.\n * Licensed under MIT, see full license in LICENSE\n * SPDX-License-Identifier: MIT\n * License-Filename: LICENSE\n */\nconst DEFAULT_PRECISION = 5;\n\nconst ENCODING_TABLE =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n\nconst DECODING_TABLE = [\n  62,\n  -1,\n  -1,\n  52,\n  53,\n  54,\n  55,\n  56,\n  57,\n  58,\n  59,\n  60,\n  61,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  -1,\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n  24,\n  25,\n  -1,\n  -1,\n  -1,\n  -1,\n  63,\n  -1,\n  26,\n  27,\n  28,\n  29,\n  30,\n  31,\n  32,\n  33,\n  34,\n  35,\n  36,\n  37,\n  38,\n  39,\n  40,\n  41,\n  42,\n  43,\n  44,\n  45,\n  46,\n  47,\n  48,\n  49,\n  50,\n  51,\n];\n\nconst FORMAT_VERSION = 1;\n\nconst ABSENT = 0;\nconst LEVEL = 1;\nconst ALTITUDE = 2;\nconst ELEVATION = 3;\n// Reserved values 4 and 5 should not be selectable\nconst CUSTOM1 = 6;\nconst CUSTOM2 = 7;\n\nconst Num = typeof BigInt !== \"undefined\" ? BigInt : Number;\n\nfunction decode(encoded) {\n  const decoder = decodeUnsignedValues(encoded);\n  const header = decodeHeader(decoder[0], decoder[1]);\n\n  const factorDegree = 10 ** header.precision;\n  const factorZ = 10 ** header.thirdDimPrecision;\n  const { thirdDim } = header;\n\n  let lastLat = 0;\n  let lastLng = 0;\n  let lastZ = 0;\n  const res = [];\n\n  let i = 2;\n  for (; i < decoder.length; ) {\n    const deltaLat = toSigned(decoder[i]) / factorDegree;\n    const deltaLng = toSigned(decoder[i + 1]) / factorDegree;\n    lastLat += deltaLat;\n    lastLng += deltaLng;\n\n    if (thirdDim) {\n      const deltaZ = toSigned(decoder[i + 2]) / factorZ;\n      lastZ += deltaZ;\n      res.push([lastLat, lastLng, lastZ]);\n      i += 3;\n    } else {\n      res.push([lastLat, lastLng]);\n      i += 2;\n    }\n  }\n\n  if (i !== decoder.length) {\n    throw new Error(\"Invalid encoding. Premature ending reached\");\n  }\n\n  return {\n    ...header,\n    polyline: res,\n  };\n}\n\nfunction decodeChar(char) {\n  const charCode = char.charCodeAt(0);\n  return DECODING_TABLE[charCode - 45];\n}\n\nfunction decodeUnsignedValues(encoded) {\n  let result = Num(0);\n  let shift = Num(0);\n  const resList = [];\n\n  encoded.split(\"\").forEach((char) => {\n    const value = Num(decodeChar(char));\n    result |= (value & Num(0x1f)) << shift;\n    if ((value & Num(0x20)) === Num(0)) {\n      resList.push(result);\n      result = Num(0);\n      shift = Num(0);\n    } else {\n      shift += Num(5);\n    }\n  });\n\n  if (shift > 0) {\n    throw new Error(\"Invalid encoding\");\n  }\n\n  return resList;\n}\n\nfunction decodeHeader(version, encodedHeader) {\n  if (+version.toString() !== FORMAT_VERSION) {\n    throw new Error(\"Invalid format version\");\n  }\n  const headerNumber = +encodedHeader.toString();\n  const precision = headerNumber & 15;\n  const thirdDim = (headerNumber >> 4) & 7;\n  const thirdDimPrecision = (headerNumber >> 7) & 15;\n  return { precision, thirdDim, thirdDimPrecision };\n}\n\nfunction toSigned(val) {\n  // Decode the sign from an unsigned value\n  let res = val;\n  if (res & Num(1)) {\n    res = ~res;\n  }\n  res >>= Num(1);\n  return +res.toString();\n}\n\nfunction encode({\n  precision = DEFAULT_PRECISION,\n  thirdDim = ABSENT,\n  thirdDimPrecision = 0,\n  polyline,\n}) {\n  // Encode a sequence of lat,lng or lat,lng(,{third_dim}). Note that values should be of type BigNumber\n  //   `precision`: how many decimal digits of precision to store the latitude and longitude.\n  //   `third_dim`: type of the third dimension if present in the input.\n  //   `third_dim_precision`: how many decimal digits of precision to store the third dimension.\n\n  const multiplierDegree = 10 ** precision;\n  const multiplierZ = 10 ** thirdDimPrecision;\n  const encodedHeaderList = encodeHeader(\n    precision,\n    thirdDim,\n    thirdDimPrecision\n  );\n  const encodedCoords = [];\n\n  let lastLat = Num(0);\n  let lastLng = Num(0);\n  let lastZ = Num(0);\n  polyline.forEach((location) => {\n    const lat = Num(Math.round(location[0] * multiplierDegree));\n    encodedCoords.push(encodeScaledValue(lat - lastLat));\n    lastLat = lat;\n\n    const lng = Num(Math.round(location[1] * multiplierDegree));\n    encodedCoords.push(encodeScaledValue(lng - lastLng));\n    lastLng = lng;\n\n    if (thirdDim) {\n      const z = Num(Math.round(location[2] * multiplierZ));\n      encodedCoords.push(encodeScaledValue(z - lastZ));\n      lastZ = z;\n    }\n  });\n\n  return [...encodedHeaderList, ...encodedCoords].join(\"\");\n}\n\nfunction encodeHeader(precision, thirdDim, thirdDimPrecision) {\n  // Encode the `precision`, `third_dim` and `third_dim_precision` into one encoded char\n  if (precision < 0 || precision > 15) {\n    throw new Error(\"precision out of range. Should be between 0 and 15\");\n  }\n  if (thirdDimPrecision < 0 || thirdDimPrecision > 15) {\n    throw new Error(\n      \"thirdDimPrecision out of range. Should be between 0 and 15\"\n    );\n  }\n  if (thirdDim < 0 || thirdDim > 7 || thirdDim === 4 || thirdDim === 5) {\n    throw new Error(\"thirdDim should be between 0, 1, 2, 3, 6 or 7\");\n  }\n\n  const res = (thirdDimPrecision << 7) | (thirdDim << 4) | precision;\n  return encodeUnsignedNumber(FORMAT_VERSION) + encodeUnsignedNumber(res);\n}\n\nfunction encodeUnsignedNumber(val) {\n  // Uses variable integer encoding to encode an unsigned integer. Returns the encoded string.\n  let res = \"\";\n  let numVal = Num(val);\n  while (numVal > 0x1f) {\n    const pos = (numVal & Num(0x1f)) | Num(0x20);\n    res += ENCODING_TABLE[pos];\n    numVal >>= Num(5);\n  }\n  return res + ENCODING_TABLE[numVal];\n}\n\nfunction encodeScaledValue(value) {\n  // Transform a integer `value` into a variable length sequence of characters.\n  //   `appender` is a callable where the produced chars will land to\n  let numVal = Num(value);\n  const negative = numVal < 0;\n  numVal <<= Num(1);\n  if (negative) {\n    numVal = ~numVal;\n  }\n\n  return encodeUnsignedNumber(numVal);\n}\n\nexport default {\n  encode,\n  decode,\n\n  ABSENT,\n  LEVEL,\n  ALTITUDE,\n  ELEVATION,\n};\n","import * as turf from \"@turf/turf\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport {\n  getDeliveryAppUploadedFiles,\n  listDeliveryAppUploadedFiles,\n} from \"graphql/queries\";\nimport jqueryCSV from \"jquery-csv\";\nimport Cookies from \"js-cookie\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\nimport { VEHICLES } from \"../constants\";\nimport polylineDecode from \"../flexible-polyline\";\nimport {\n  endFetchRoutingProblem,\n  getJobsList,\n  getRoutingProblem,\n  getTour,\n  setErrorMessage,\n  setFormData,\n  startFetchRoutingProblem,\n} from \"./actions\";\nvar tzlookup = require(\"tz-lookup\");\n\nexport const getDBRecord = (params) => {\n  return API.graphql(graphqlOperation(getDeliveryAppUploadedFiles, params));\n};\n\nexport const listDBRecords = (params) => {\n  return API.graphql(graphqlOperation(listDeliveryAppUploadedFiles, params));\n};\n\nexport const fetchJobsListCSV = (url) => {\n  return (dispatch) => {\n    fetch(url)\n      .then((response) => response.text())\n      .then((csv) => {\n        dispatch(getJobsList(jqueryCSV.toObjects(csv, { separator: \",\" })));\n      });\n  };\n};\n\nexport const getTimezoneOffset = (profiles, date) => {\n  let center = null;\n  if (profiles && profiles.length > 0) {\n    center = turf.center(\n      turf.featureCollection(\n        _.map(profiles, (profile) => {\n          return turf.point([+profile.longitude, +profile.latitude]);\n        })\n      )\n    ).geometry.coordinates;\n  }\n  if (center === null) {\n    return {\n      name: \"UTC\",\n      offset: \"Z\",\n    };\n  }\n  const timezone_name = tzlookup(center[1], center[0]);\n  const timezome_offset = moment(date + \"T12:00:00Z\")\n    .tz(timezone_name)\n    .toISOString(true)\n    .split(\".000\")[1];\n  return {\n    name: timezone_name,\n    offset: timezome_offset,\n  };\n};\n\nexport const searchAddress = () => {\n  //https://autosuggest.search.hereapi.com/v1/autosuggest\n};\n\nexport const fetchTour = ({ tour, formData, profiles }) => {\n  return (dispatch) => {\n    const currentProfile = _.find(profiles, { name: tour.typeId });\n\n    const viaPoints = _.map(\n      tour.stops.slice(1, tour.stops.length),\n      (stop, key) => {\n        return \"via=\" + stop.location.lat + \",\" + stop.location.lng;\n      }\n    );\n\n    const timezone = getTimezoneOffset(\n      _.filter(profiles, { active: true }),\n      formData.startDate\n    ).offset;\n\n    const currentVehicle = _.find(\n      VEHICLES.options,\n      (vehicle) => +vehicle.id === +currentProfile.vehicleType\n    );\n\n    const destinationPoint = currentProfile.mustGoBack\n      ? currentProfile.latitude + \",\" + currentProfile.longitude\n      : tour.stops[tour.stops.length - 1].location.lat +\n        \",\" +\n        tour.stops[tour.stops.length - 1].location.lng;\n\n    const urlQuery =\n      \"https://router.hereapi.com/v8/routes?\" +\n      `departureTime=${\n        formData.startDate +\n        \"T\" +\n        currentProfile.timeWindow[0] +\n        \":00\" +\n        timezone\n      }&` +\n      `origin=${currentProfile.latitude + \",\" + currentProfile.longitude}&` +\n      `transportMode=${currentVehicle.type}&` +\n      `destination=${destinationPoint}&` +\n      `${viaPoints.join(\"&\")}&` +\n      \"return=polyline\";\n\n    fetch(urlQuery, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + Cookies.get(\"bearer_token\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        const decodedRouteSections = _.map(\n          json.routes[0].sections,\n          (section) => {\n            return {\n              ...section,\n              polyline: polylineDecode.decode(section.polyline),\n            };\n          }\n        );\n\n        dispatch(\n          getTour({\n            ...json.routes[0],\n            sections: decodedRouteSections,\n            vehicleId: tour.vehicleId,\n          })\n        );\n      })\n      .catch((error) => {\n        dispatch(\n          setErrorMessage({\n            title: \"router.hereapi error\",\n            message: String(error),\n          })\n        );\n      });\n  };\n};\n\nexport const fetchTours = ({ routingProblem, formData, profiles }) => {\n  return (dispatch) => {\n    _.map(routingProblem.tours, (tour) => {\n      dispatch(fetchTour({ tour, formData, profiles }));\n    });\n  };\n};\n\nexport const fetchRoutingProblem = ({ jobList, formData, profiles }) => {\n  return (dispatch) => {\n    dispatch(startFetchRoutingProblem());\n\n    const timezone = getTimezoneOffset(\n      _.filter(profiles, { active: true }),\n      formData.startDate\n    ).offset;\n    dispatch(\n      setFormData({\n        timezone: getTimezoneOffset(\n          _.filter(profiles, { active: true }),\n          formData.startDate\n        ),\n      })\n    );\n\n    const requestBody = {\n      plan: {\n        jobs: _.map(jobList, (job) => {\n          return {\n            id: job.JobID,\n            places: {\n              delivery: {\n                location: { lat: +job.latitude, lng: +job.longitude },\n                times: [\n                  [\n                    `${formData.startDate}T${\n                      job.TimeWindowStart && job.TimeWindowStart !== \"\"\n                        ? job.TimeWindowStart\n                        : \"13:00\"\n                    }:00${timezone}`,\n                    `${formData.startDate}T${\n                      job.TimeWindowEnd && job.TimeWindowEnd !== \"\"\n                        ? job.TimeWindowEnd\n                        : \"23:59\"\n                    }:00${timezone}`,\n                  ],\n                ],\n                duration: +job.ServiceTimeMin * 60,\n              },\n            },\n            demand: [+job.Demand],\n            skills:\n              job.SkillsRequired && job.SkillsRequired !== \"\"\n                ? job.SkillsRequired.split(\",\")\n                : undefined,\n          };\n        }),\n      },\n      fleet: {\n        types: _.filter(\n          _.map(profiles, (profile) => {\n            if (profile.active) {\n              const currentVehicle = _.find(\n                VEHICLES.options,\n                (vehicle) => +vehicle.id === +profile.vehicleType\n              );\n              return {\n                id: profile.name,\n                profile: profile.name,\n                costs: {\n                  distance: +profile.distanceCost,\n                  time: +profile.timeCost,\n                  fixed: +profile.fixedCost,\n                },\n                shifts: profile.mustGoBack\n                  ? [\n                      {\n                        start: {\n                          time: `${formData.startDate}T${profile.timeWindow[0]}:00${timezone}`,\n                          location: {\n                            lat: +profile.latitude,\n                            lng: +profile.longitude,\n                          },\n                        },\n                        end: {\n                          time: `${formData.startDate}T${profile.timeWindow[1]}:00${timezone}`,\n                          location: {\n                            lat: +profile.latitude,\n                            lng: +profile.longitude,\n                          },\n                        },\n                      },\n                    ]\n                  : [\n                      {\n                        start: {\n                          time: `${formData.startDate}T${profile.timeWindow[0]}:00${timezone}`,\n                          location: {\n                            lat: +profile.latitude,\n                            lng: +profile.longitude,\n                          },\n                        },\n                      },\n                    ],\n                limits:\n                  !profile.maxDistance && !profile.shiftTime\n                    ? undefined\n                    : {\n                        maxDistance: profile.maxDistance\n                          ? +profile.maxDistance\n                          : undefined,\n                        shiftTime: profile.shiftTime\n                          ? +profile.shiftTime\n                          : undefined,\n                      },\n                capacity: [+profile.capacity],\n                skills: profile.skills\n                  ? _.map(profile.skills.split(\",\"), (p) => p.trim())\n                  : undefined,\n                amount: +profile.vehicleCount,\n              };\n            }\n          }),\n          (p) => p !== undefined\n        ),\n        profiles: _.filter(\n          _.map(profiles, (profile) => {\n            if (profile.active) {\n              const currentVehicle = _.find(\n                VEHICLES.options,\n                (vehicle) => +vehicle.id === +profile.vehicleType\n              );\n              return {\n                name: profile.name,\n                type: currentVehicle.type,\n                departureTime: `${formData.startDate}T${profile.timeWindow[0]}:00${timezone}`,\n              };\n            }\n          }),\n          (p) => p !== undefined\n        ),\n      },\n    };\n\n    console.log(requestBody);\n\n    fetch(\"https://vrp.api.here.com/v1/problems\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + Cookies.get(\"bearer_token\"),\n      },\n      body: JSON.stringify(requestBody),\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.status && json.status !== 200) {\n          dispatch(\n            setErrorMessage({\n              title: \"vrp.api.here: \" + json.title,\n              message: json.cause,\n            })\n          );\n        } else {\n          dispatch(getRoutingProblem(json));\n          dispatch(fetchTours({ routingProblem: json, formData, profiles }));\n        }\n        dispatch(endFetchRoutingProblem());\n      })\n      .catch((error) => {\n        dispatch(\n          setErrorMessage({\n            title: \"vrp.api.here error\",\n            message: String(error),\n          })\n        );\n        dispatch(endFetchRoutingProblem());\n      });\n  };\n};\n","/* eslint-disable max-len */\n/* eslint-disable new-cap */\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport awsconfig from \"aws/aws-exports\";\nimport Amplify from \"aws-amplify\";\nimport CryptoJS from \"crypto-js\";\nimport $ from \"jquery\";\nimport Cookies from \"js-cookie\";\nimport React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport csvFile from \"./data/Job_list.csv\";\nimport OAuth from \"./oauth-1.0a\";\nimport GeocodePage from \"./pages/GeocodePage\";\nimport ImportPage from \"./pages/ImportPage\";\nimport MapPage from \"./pages/MapPage\";\nimport UploadPage from \"./pages/UploadPage\";\nimport { changeWindowSize } from \"./redux/actions\";\nimport { fetchJobsListCSV } from \"./redux/fetchers\";\nimport { routePath } from \"./routing\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n  }\n\n  componentDidMount() {\n    const changeWindowSizeState = () => {\n      const width = $(window).width();\n      const height = $(window).height();\n      this.props.changeWindowSize(width, height);\n    };\n\n    changeWindowSizeState();\n\n    $(window).on(\"resize\", function () {\n      changeWindowSizeState();\n    });\n\n    this.props.fetchJobsListCSV(csvFile);\n\n    Amplify.configure(awsconfig);\n\n    const bearer_token = Cookies.get(\"bearer_token\");\n\n    if (!bearer_token) {\n      // Initialize\n      const oauth = new OAuth({\n        consumer: {\n          key: \"vqiFCvO6q-k2d_hWaLrZEg\",\n          secret:\n            \"qGafumAC3TJm9u6hziigM3uU3bBOY_WGPAX85pOmwumfJzqzDo7RSPLeaGM6-ZKBO_7f9zM_y9IvJJb8vrpd6Q\",\n        },\n        signature_method: \"HMAC-SHA256\",\n        hash_function(base_string, key) {\n          return CryptoJS.HmacSHA256(base_string, key).toString(\n            CryptoJS.enc.Base64\n          );\n        },\n      });\n\n      const request_data = {\n        url: \"https://account.api.here.com/oauth2/token\",\n        method: \"POST\",\n        data: { grant_type: \"client_credentials\" },\n      };\n\n      $.ajax({\n        url: request_data.url,\n        type: request_data.method,\n        headers: oauth.toHeader(oauth.authorize(request_data)),\n        data: request_data.data,\n      }).done(function (data) {\n        Cookies.set(\"bearer_token\", data.access_token, { expires: 1 });\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container fluid className=\"delivery-app\">\n        <Switch>\n          <Route exact path={routePath.upload} component={UploadPage} />\n          <Route exact path={routePath.import} component={ImportPage} />\n          <Route exact path={routePath.map} component={MapPage} />\n          <Route exact path={routePath.geocode} component={GeocodePage} />\n          <Route exact path=\"/\">\n            <Redirect to={routePath.upload} />\n          </Route>\n        </Switch>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    errorMessage: state.window.errorMessage,\n    isRoutingProblemResultShown: state.window.isRoutingProblemResultShown,\n    isJobsEditorModalShown: state.window.isJobsEditorModalShown,\n    isProfileFormModalShown: state.window.isProfileFormModalShown,\n    editServiceProfile: state.serviceProfiles.editServiceProfile,\n    timezone: state.formData.timezone,\n  };\n};\n\nexport default connect(mapStateToProps, { changeWindowSize, fetchJobsListCSV })(\n  App\n);\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory({\n  /* pass a configuration object here if needed */\n});\n","import { SET_FORM_DATA } from \"../actionTypes\";\n\nconst initialState = {\n  startDate: null,\n  timezone: \"Z\",\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_FORM_DATA: {\n      return {\n        ...state,\n        ...action.payload.params,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import _ from \"lodash\";\n\nimport {\n  JOB_FIELDS,\n  JOB_LIST_INDEX_KEY,\n  LOCATION_FIELDS,\n} from \"../../constants\";\nimport {\n  ADD_JOB_LIST_VALUE,\n  GET_DB_DATA,\n  GET_JOBS_LIST,\n  REMOVE_JOB_FIELD,\n  REMOVE_JOB_LIST_VALUE,\n  SET_IS_BATCH_EDITING,\n  SET_IS_DROPDOWN_TOGGLED,\n  SET_JOB_FIELD,\n  SET_JOB_LIST_VALUE,\n  SET_LOCATION_FIELD,\n} from \"../actionTypes\";\n\nconst initialState = {\n  isBatchEditing: false,\n  isDropdownToggled: false,\n  list: null,\n  db: [],\n  locationFields: LOCATION_FIELDS,\n  jobFields: JOB_FIELDS,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_DB_DATA: {\n      return {\n        ...state,\n        db: action.payload.data,\n      };\n    }\n    case GET_JOBS_LIST: {\n      return {\n        ...state,\n        list: _.map(action.payload.jobList, (job, key) => ({\n          ...job,\n          [JOB_LIST_INDEX_KEY]: key,\n        })),\n        locationFields: LOCATION_FIELDS,\n        jobFields: JOB_FIELDS,\n      };\n    }\n    case ADD_JOB_LIST_VALUE: {\n      return {\n        ...state,\n        list: [\n          {\n            ...action.payload.params,\n            [JOB_LIST_INDEX_KEY]: state.list.length,\n          },\n          ...state.list,\n        ],\n      };\n    }\n    case REMOVE_JOB_LIST_VALUE: {\n      return {\n        ...state,\n        list: _.filter(\n          state.list,\n          (job) => job[JOB_LIST_INDEX_KEY] !== action.payload.index\n        ),\n      };\n    }\n    case SET_JOB_LIST_VALUE: {\n      return {\n        ...state,\n        list: _.map(state.list, (job, index) => {\n          if (index === action.payload.index) {\n            return {\n              ...job,\n              ...action.payload.params,\n            };\n          } else {\n            return job;\n          }\n        }),\n      };\n    }\n    case SET_LOCATION_FIELD: {\n      return {\n        ...state,\n        locationFields: {\n          ...state.locationFields,\n          [action.payload.field.id]: action.payload.field,\n        },\n      };\n    }\n    case SET_JOB_FIELD: {\n      return {\n        ...state,\n        jobFields: {\n          ...state.jobFields,\n          [action.payload.field.id]: action.payload.field,\n        },\n      };\n    }\n    case REMOVE_JOB_FIELD: {\n      return {\n        ...state,\n        jobFields: _.filter(\n          state.jobFields,\n          (field) => field.id !== action.payload.id\n        ),\n      };\n    }\n    case SET_IS_BATCH_EDITING: {\n      return {\n        ...state,\n        isBatchEditing: action.payload.status,\n      };\n    }\n    case SET_IS_DROPDOWN_TOGGLED: {\n      return {\n        ...state,\n        isDropdownToggled: action.payload.status,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { MAPBOX } from \"../../constants\";\nimport {\n  MAPBOX_READY,\n  MAPBOX_VIEWPORT_CHANGE,\n  MOVE_TO_POINT,\n  RESIZE_WINDOW,\n  SET_CURRENT_TOUR,\n} from \"../actionTypes\";\n\nconst initialState = {\n  isMapboxReady: false,\n  currentTourId: null,\n  flyToPoint: null,\n  viewport: {\n    ...MAPBOX.VIEWPORT,\n  },\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case MAPBOX_READY: {\n      return {\n        ...state,\n        isMapboxReady: true,\n      };\n    }\n    case RESIZE_WINDOW: {\n      return {\n        ...state,\n        viewport: {\n          ...state.viewport,\n          width: action.payload.width,\n          height: action.payload.height,\n        },\n      };\n    }\n    case MAPBOX_VIEWPORT_CHANGE: {\n      return {\n        ...state,\n        viewport: {\n          ...state.viewport,\n          ...action.payload.viewport,\n        },\n      };\n    }\n    case SET_CURRENT_TOUR: {\n      return {\n        ...state,\n        currentTourId: action.payload.tourId,\n      };\n    }\n    case MOVE_TO_POINT: {\n      return {\n        ...state,\n        flyToPoint: action.payload.coords,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import {\n  END_FETCH_ROUTING_PROBLEM,\n  GET_JOBS_LIST,\n  GET_ROUTING_PROBLEM,\n  GET_TOUR,\n  START_FETCH_ROUTING_PROBLEM,\n} from \"../actionTypes\";\n\nconst initialState = {\n  isLoading: false,\n  results: null,\n  tours: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case START_FETCH_ROUTING_PROBLEM: {\n      return {\n        ...state,\n        isLoading: true,\n        tours: null,\n      };\n    }\n    case END_FETCH_ROUTING_PROBLEM: {\n      return {\n        ...state,\n        isLoading: false,\n      };\n    }\n    case GET_ROUTING_PROBLEM: {\n      return {\n        ...state,\n        results: action.payload.json,\n      };\n    }\n    case GET_TOUR: {\n      return {\n        ...state,\n        tours: {\n          ...state.tours,\n          [action.payload.tour.vehicleId]: action.payload.tour,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import _ from \"lodash\";\n\nimport {\n  ADD_SERVICE_PROFILE,\n  DELETE_SERVICE_PROFILE,\n  EDIT_SERVICE_PROFILE,\n  MAPBOX_READY,\n  SET_EDIT_SERVICE_PROFILE,\n} from \"../actionTypes\";\n\nconst initialState = {\n  editServiceProfile: null,\n  profiles: [\n    {\n      name: \"Plumber\",\n      skills: \"skill1,skill2,skill3\",\n      longitude: -93.4376969129225,\n      latitude: 44.93210342318257,\n      timeWindow: [\"06:00\", \"21:00\"],\n      vehicleCount: 3,\n      vehicleType: 1,\n      active: true,\n      mustGoBack: true,\n      fixedCost: 22,\n      distanceCost: 1,\n      timeCost: 2,\n      capacity: 20,\n    },\n    {\n      name: \"Electrician\",\n      skills: \"skill1,skill2,skill3\",\n      longitude: -93.41010833483658,\n      latitude: 44.896012096005286,\n      timeWindow: [\"06:00\", \"21:00\"],\n      vehicleCount: 5,\n      vehicleType: 3,\n      active: true,\n      mustGoBack: true,\n      fixedCost: 22,\n      distanceCost: 1,\n      timeCost: 1,\n      capacity: 15,\n    },\n  ],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_SERVICE_PROFILE: {\n      return {\n        ...state,\n        editServiceProfile: null,\n        profiles: [...state.profiles, action.payload.profile],\n      };\n    }\n    case EDIT_SERVICE_PROFILE: {\n      return {\n        ...state,\n        editServiceProfile: null,\n        profiles: _.map(state.profiles, (profile, key) => {\n          if (profile.name === action.payload.name) {\n            return {\n              ...profile,\n              ...action.payload.params,\n            };\n          } else {\n            return profile;\n          }\n        }),\n      };\n    }\n    case DELETE_SERVICE_PROFILE: {\n      return {\n        ...state,\n        profiles: _.filter(state.profiles, (profile) => {\n          return profile.name !== action.payload.profile.name;\n        }),\n      };\n    }\n    case SET_EDIT_SERVICE_PROFILE: {\n      return {\n        ...state,\n        editServiceProfile: action.payload.profile,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import {\n  GET_ROUTING_PROBLEM,\n  RESIZE_WINDOW,\n  SET_ERROR_MESSAGE,\n  SHOW_JOBS_EDITOR_MODAL,\n  SHOW_PROFILE_FORM_MODAL,\n  SHOW_ROUTING_PROBLEM_RESULT,\n} from \"../actionTypes\";\n\nconst initialState = {\n  width: 0,\n  height: 0,\n  errorMessage: null,\n  isRoutingProblemResultShown: false,\n  isJobsEditorModalShown: false,\n  isProfileFormModalShown: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case RESIZE_WINDOW: {\n      return {\n        ...state,\n        width: action.payload.width,\n        height: action.payload.height,\n      };\n    }\n    case SHOW_ROUTING_PROBLEM_RESULT: {\n      return {\n        ...state,\n        isRoutingProblemResultShown: action.payload.status,\n      };\n    }\n    case GET_ROUTING_PROBLEM: {\n      return {\n        ...state,\n        isRoutingProblemResultShown: true,\n      };\n    }\n    case SET_ERROR_MESSAGE: {\n      return {\n        ...state,\n        errorMessage: action.payload.params,\n      };\n    }\n    case SHOW_JOBS_EDITOR_MODAL: {\n      return {\n        ...state,\n        isJobsEditorModalShown: action.payload.status,\n      };\n    }\n    case SHOW_PROFILE_FORM_MODAL: {\n      return {\n        ...state,\n        isProfileFormModalShown: action.payload.status,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport formData from \"./formData\";\nimport jobList from \"./jobList\";\nimport mapbox from \"./mapbox\";\nimport routingProblem from \"./routingProblem\";\nimport serviceProfiles from \"./serviceProfiles\";\nimport window from \"./window\";\n\nexport default combineReducers({\n  mapbox,\n  window,\n  routingProblem,\n  formData,\n  jobList,\n  serviceProfiles,\n});\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  rootReducer,\n  composeEnhancer(applyMiddleware(thunk))\n);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport history from \"./history\";\nimport store from \"./redux/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}